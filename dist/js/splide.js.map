{"version":3,"file":"splide.js","sources":["../../src/js/core/event.js","../../src/js/core/state.js","../../src/js/utils/object.js","../../src/js/utils/utils.js","../../src/js/utils/dom.js","../../src/js/constants/types.js","../../src/js/transitions/slide/index.js","../../src/js/transitions/fade/index.js","../../src/js/core/composer.js","../../src/js/utils/error.js","../../src/js/constants/classes.js","../../src/js/constants/i18n.js","../../src/js/constants/defaults.js","../../src/js/constants/states.js","../../src/js/splide.js","../../src/js/components/options/index.js","../../src/js/constants/directions.js","../../src/js/components/elements/slide.js","../../src/js/components/elements/index.js","../../src/js/components/controller/index.js","../../src/js/components/track/index.js","../../src/js/components/clones/index.js","../../src/js/components/layout/directions/horizontal.js","../../src/js/components/layout/directions/vertical.js","../../src/js/utils/time.js","../../src/js/components/layout/index.js","../../src/js/components/drag/index.js","../../src/js/components/click/index.js","../../src/js/components/autoplay/index.js","../../src/js/components/cover/index.js","../../src/js/components/arrows/path.js","../../src/js/components/arrows/index.js","../../src/js/components/pagination/index.js","../../src/js/components/lazyload/index.js","../../src/js/constants/a11y.js","../../src/js/components/keyboard/index.js","../../src/js/components/a11y/index.js","../../src/js/components/sync/index.js","../../src/js/components/breakpoints/index.js","../../src/js/components/index.js","../../src/js/build/default/default.js"],"sourcesContent":["/**\n * The function for providing an Event object simply managing events.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n\n/**\n * The function for providing an Event object simply managing events.\n */\nexport default () => {\n\t/**\n\t * Store all event data.\n\t *\n\t * @type {Array}\n\t */\n\tlet data = [];\n\n\tconst Event = {\n\t\t/**\n\t\t * Subscribe the given event(s).\n\t\t *\n\t\t * @param {string}   events  - An event name. Use space to separate multiple events.\n\t\t *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n\t\t * @param {function} handler - A callback function.\n\t\t * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\n\t\t * @param {Object}   options - Optional. Options for addEventListener.\n\t\t */\n\t\ton( events, handler, elm = null, options = {} ) {\n\t\t\tevents.split( ' ' ).forEach( event => {\n\t\t\t\tif ( elm ) {\n\t\t\t\t\telm.addEventListener( event, handler, options );\n\t\t\t\t}\n\n\t\t\t\tdata.push( { event, handler, elm, options } );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Unsubscribe the given event(s).\n\t\t *\n\t\t * @param {string}  events - A event name or names split by space.\n\t\t * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\n\t\t */\n\t\toff( events, elm = null ) {\n\t\t\tevents.split( ' ' ).forEach( event => {\n\t\t\t\tdata = data.filter( item => {\n\t\t\t\t\tif ( item && item.event === event && item.elm === elm ) {\n\t\t\t\t\t\tunsubscribe( item );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t} );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Emit an event.\n\t\t * This method is only for custom events.\n\t\t *\n\t\t * @param {string}  event - An event name.\n\t\t * @param {*}       args  - Any number of arguments passed to handlers.\n\t\t */\n\t\temit( event, ...args ) {\n\t\t\tdata.forEach( item => {\n\t\t\t\tif ( ! item.elm && item.event.split( '.' )[0] === event ) {\n\t\t\t\t\titem.handler( ...args );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Clear event data.\n\t\t */\n\t\tdestroy() {\n\t\t\tdata.forEach( unsubscribe );\n\t\t\tdata = [];\n\t\t},\n\t};\n\n\t/**\n\t * Remove the registered event listener.\n\t *\n\t * @param {Object} item - An object containing event data.\n\t */\n\tfunction unsubscribe( item ) {\n\t\tif ( item.elm ) {\n\t\t\titem.elm.removeEventListener( item.event, item.handler, item.options );\n\t\t}\n\t}\n\n\treturn Event;\n}","/**\n * The function providing a super simple state system.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * The function providing a super simple state system.\n *\n * @param {string|number} initialState - Provide the initial state value.\n */\nexport default initialState => {\n\t/**\n\t * Store the current state.\n\t *\n\t * @type {string|number}\n\t */\n\tlet curr = initialState;\n\n\treturn {\n\t\t/**\n\t\t * Change state.\n\t\t *\n\t\t * @param {string|number} state - A new state.\n\t\t */\n\t\tset( state ) {\n\t\t\tcurr = state;\n\t\t},\n\n\t\t/**\n\t\t * Verify if the current state is given one or not.\n\t\t *\n\t\t * @param {string|number} state - A state name to be verified.\n\t\t *\n\t\t * @return {boolean} - True if the current state is the given one.\n\t\t */\n\t\tis( state ) {\n\t\t\treturn state === curr;\n\t\t},\n\t}\n}","/**\n * Some utility functions related with Object, supporting IE.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nconst { keys } = Object;\n\n/**\n * Iterate an object like Array.forEach.\n * IE doesn't support forEach of HTMLCollection.\n *\n * @param {Object}    obj       - An object.\n * @param {function}  callback  - A function handling each value. Arguments are value, property and index.\n */\nexport function each( obj, callback ) {\n\tkeys( obj ).some( ( key, index ) => {\n\t\treturn callback( obj[ key ], key, index );\n\t} );\n}\n\n/**\n * Return values of the given object as an array.\n * IE doesn't support Object.values.\n *\n * @param {Object} obj - An object.\n *\n * @return {Array} - An array containing all values of the given object.\n */\nexport function values( obj ) {\n\treturn keys( obj ).map( key => obj[ key ] );\n}\n\n/**\n * Check if the given subject is object or not.\n *\n * @param {*} subject - A subject to be verified.\n *\n * @return {boolean} - True if object, false otherwise.\n */\nexport function isObject( subject ) {\n\treturn typeof subject === 'object';\n}\n\n/**\n * Merge two objects deeply.\n *\n * @param {Object} to   - An object where \"from\" is merged.\n * @param {Object} from - An object merged to \"to\".\n *\n * @return {Object} - A merged object.\n */\nexport function merge( { ...to }, from ) {\n\teach( from, ( value, key ) => {\n\t\tif ( isObject( value ) ) {\n\t\t\tif ( ! isObject( to[ key ] ) ) {\n\t\t\t\tto[ key ] = {};\n\t\t\t}\n\n\t\t\tto[ key ] = merge( to[ key ], value );\n\t\t} else {\n\t\t\tto[ key ] = value;\n\t\t}\n\t} );\n\n\treturn to;\n}\n\n/**\n * Assign all properties \"from\" to \"to\" object.\n *\n * @param {Object} to   - An object where properties are assigned.\n * @param {Object} from - An object whose properties are assigned to \"to\".\n *\n * @return {Object} - An assigned object.\n */\nexport function assign( to, from ) {\n\tkeys( from ).forEach( key => {\n\t\tif ( ! to[ key ] ) {\n\t\t\tObject.defineProperty( to, key, Object.getOwnPropertyDescriptor( from, key ) );\n\t\t}\n\t} );\n\n\treturn to;\n}","/**\n * A package of some miscellaneous utility functions.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { create, append, remove, applyStyle } from \"./dom\";\n\n/**\n * Convert the given value to array.\n *\n * @param {*} value - Any value.\n *\n * @return {*[]} - Array containing the given value.\n */\nexport function toArray( value ) {\n\treturn Array.isArray( value ) ? value : [ value ];\n}\n\n/**\n * Check if the given value is between min and max.\n * Min will be returned when the value is less than min or max will do when greater than max.\n *\n * @param {number} value - A number to be checked.\n * @param {number} m1    - Minimum or maximum number.\n * @param {number} m2    - Maximum or minimum number.\n *\n * @return {number} - A value itself, min or max.\n */\nexport function between( value, m1, m2 ) {\n\treturn Math.min( Math.max( value, m1 > m2 ? m2 : m1 ), m1 > m2 ? m1 : m2 );\n}\n\n/**\n * The sprintf method with minimum functionality.\n *\n * @param {string}       format       - The string format.\n * @param {string|Array} replacements - Replacements accepting multiple arguments.\n *\n * @returns {string} - Converted string.\n */\nexport function sprintf( format, replacements ) {\n\tlet i = 0;\n\treturn format.replace( /%s/g, () => toArray( replacements )[ i++ ] );\n}\n\n/**\n * Append px unit to the given subject if necessary.\n *\n * @param {number|string} value - A value that may not include an unit.\n *\n * @return {string} - If the value is string, return itself.\n *                    If number, do value + \"px\". An empty string, otherwise.\n */\nexport function unit( value ) {\n\tconst type = typeof value;\n\n\tif ( type === 'number' && value > 0 ) {\n\t\treturn parseFloat( value ) + 'px';\n\t}\n\n\treturn type === 'string' ? value : '';\n}\n\n/**\n * Pad start with 0.\n *\n * @param {number} number - A number to be filled with 0.\n *\n * @return {string|number} - Padded number.\n */\nexport function pad( number ) {\n\treturn number < 10 ? '0' + number : number\n}\n\n/**\n * Convert the given value to pixel.\n *\n * @param {Element}       root  - Root element where a dummy div is appended.\n * @param {string|number} value - CSS value to be converted, such as 10rem.\n *\n * @return {number} - Pixel.\n */\nexport function toPixel( root, value ) {\n\tif ( typeof value === 'string' ) {\n\t\tconst div = create( 'div', {} );\n\n\t\tapplyStyle( div, {\n\t\t\tposition: 'absolute',\n\t\t\twidth: value,\n\t\t} );\n\n\t\tappend( root, div );\n\n\t\tvalue = div.clientWidth;\n\n\t\tremove( div );\n\t}\n\n\treturn +value || 0;\n}","/**\n * Some utility functions related with DOM.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { each, values } from './object';\nimport { toArray } from \"./utils\";\n\n\n/**\n * Find the first element matching the given selector.\n * Be aware that all selectors after a space are ignored.\n *\n * @param {Element|Node}  elm       - An ancestor element.\n * @param {string}        selector  - DOMString.\n *\n * @return {Element|null} - A found element or null.\n */\nexport function find( elm, selector ) {\n\treturn elm ? elm.querySelector( selector.split( ' ' )[0] ) : null;\n}\n\n/**\n * Find a first child having the given tag or class name.\n *\n * @param {Element} parent         - A parent element.\n * @param {string}  tagOrClassName - A tag or class name.\n *\n * @return {Element|undefined} - A found element on success or undefined on failure.\n */\nexport function child( parent, tagOrClassName ) {\n\treturn children( parent, tagOrClassName )[0];\n}\n\n/**\n * Return chile elements that matches the provided tag or class name.\n *\n * @param {Element} parent         - A parent element.\n * @param {string}  tagOrClassName - A tag or class name.\n *\n * @return {Element[]} - Found elements.\n */\nexport function children( parent, tagOrClassName ) {\n\tif ( parent ) {\n\t\treturn values( parent.children ).filter( child => {\n\t\t\treturn hasClass( child, tagOrClassName.split( ' ' )[0] ) || child.tagName === tagOrClassName;\n\t\t} );\n\t}\n\n\treturn [];\n}\n\n/**\n * Create an element with some optional attributes.\n *\n * @param {string} tag   - A tag name.\n * @param {Object} attrs - An object any attribute pairs of name and value.\n *\n * @return {Element} - A created element.\n */\nexport function create( tag, attrs ) {\n\tconst elm = document.createElement( tag );\n\teach( attrs, ( value, key ) => setAttribute( elm, key, value ) );\n\n\treturn elm;\n}\n\n/**\n * Convert HTML string to DOM node.\n *\n * @param {string} html - HTML string.\n *\n * @return {Node} - A created node.\n */\nexport function domify( html ) {\n\tconst div = create( 'div', {} );\n\tdiv.innerHTML = html;\n\n\treturn div.firstChild;\n}\n\n/**\n * Remove a given element from a DOM tree.\n *\n * @param {Element|Element[]} elms - Element(s) to be removed.\n */\nexport function remove( elms ) {\n\ttoArray( elms ).forEach( elm => {\n\t\tif ( elm ) {\n\t\t\tconst parent = elm.parentElement;\n\t\t\tparent && parent.removeChild( elm );\n\t\t}\n\t} );\n}\n\n/**\n * Append a child to a given element.\n *\n * @param {Element} parent - A parent element.\n * @param {Element} child  - An element to be appended.\n */\nexport function append( parent, child ) {\n\tif ( parent ) {\n\t\tparent.appendChild( child );\n\t}\n}\n\n/**\n * Insert an element before the reference element.\n *\n * @param {Element|Node} ref - A reference element.\n * @param {Element}      elm - An element to be inserted.\n */\nexport function before( elm, ref ) {\n\tif ( elm && ref ) {\n\t\tconst parent = ref.parentElement;\n\t\tparent && parent.insertBefore( elm, ref );\n\t}\n}\n\n/**\n * Apply styles to the given element.\n *\n * @param {Element} elm     - An element where styles are applied.\n * @param {Object}  styles  - Object containing styles.\n */\nexport function applyStyle( elm, styles ) {\n\tif ( elm ) {\n\t\teach( styles, ( value, prop ) => {\n\t\t\tif ( value !== null ) {\n\t\t\t\telm.style[ prop ] = value;\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Add or remove classes to/from the element.\n * This function is for internal usage.\n *\n * @param {Element}         elm     - An element where classes are added.\n * @param {string|string[]} classes - Class names being added.\n * @param {boolean}         remove  - Whether to remove or add classes.\n */\nfunction addOrRemoveClasses( elm, classes, remove ) {\n\tif ( elm ) {\n\t\ttoArray( classes ).forEach( name => {\n\t\t\tif ( name ) {\n\t\t\t\telm.classList[ remove ? 'remove' : 'add' ]( name );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Add classes to the element.\n *\n * @param {Element}          elm     - An element where classes are added.\n * @param {string|string[]}  classes - Class names being added.\n */\nexport function addClass( elm, classes ) {\n\taddOrRemoveClasses( elm, classes, false );\n}\n\n/**\n * Remove a class from the element.\n *\n * @param {Element}         elm     - An element where classes are removed.\n * @param {string|string[]} classes - A class name being removed.\n */\nexport function removeClass( elm, classes ) {\n\taddOrRemoveClasses( elm, classes, true );\n}\n\n/**\n * Verify if the provided element has the class or not.\n *\n * @param {Element} elm       - An element.\n * @param {string}  className - A class name.\n *\n * @return {boolean} - True if the element has the class or false if not.\n */\nexport function hasClass( elm, className ) {\n\treturn !! elm && elm.classList.contains( className );\n}\n\n/**\n * Set attribute to the given element.\n *\n * @param {Element}                 elm   - An element where an attribute is assigned.\n * @param {string}                  name  - Attribute name.\n * @param {string|number|boolean}   value - Attribute value.\n */\nexport function setAttribute( elm, name, value ) {\n\tif ( elm ) {\n\t\telm.setAttribute( name, value );\n\t}\n}\n\n/**\n * Get attribute from the given element.\n *\n * @param {Element} elm  - An element where an attribute is assigned.\n * @param {string}  name - Attribute name.\n *\n * @return {string} - The value of the given attribute if available. An empty string if not.\n */\nexport function getAttribute( elm, name ) {\n\treturn elm ? elm.getAttribute( name ) : '';\n}\n\n/**\n * Remove attribute from the given element.\n *\n * @param {Element|Element[]} elms  - An element where an attribute is removed.\n * @param {string|string[]}      names - Attribute name.\n */\nexport function removeAttribute( elms, names ) {\n\ttoArray( names ).forEach( name => {\n\t\ttoArray( elms ).forEach( elm => elm && elm.removeAttribute( name ) );\n\t} );\n}\n\n/**\n * Return the Rect object of the provided object.\n *\n * @param {Element} elm - An element.\n *\n * @return {ClientRect|DOMRect} - A rect object.\n */\nexport function getRect( elm ) {\n\treturn elm.getBoundingClientRect();\n}\n\n/**\n * Trigger the given callback after all images contained by the element are loaded.\n *\n * @param {Element}  elm      - Element that may contain images.\n * @param {Function} callback - Callback function fired right after all images are loaded.\n */\nexport function loaded( elm, callback ) {\n\tconst images = elm.querySelectorAll( 'img' );\n\tconst length = images.length;\n\n\tif ( length ) {\n\t\tlet count = 0;\n\n\t\teach( images, img => {\n\t\t\timg.onload = img.onerror = () => {\n\t\t\t\tif ( ++count === length ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t} );\n\t} else {\n\t\t// Trigger the callback immediately if there is no image.\n\t\tcallback();\n\t}\n}","/**\n * Export slider types.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Normal slider.\n *\n * @type {string}\n */\nexport const SLIDE = 'slide';\n\n/**\n * Loop after the last slide and before the first one.\n *\n * @type {string}\n */\nexport const LOOP = 'loop';\n\n/**\n * The track doesn't move.\n *\n * @type {string}\n */\nexport const FADE = 'fade';","/**\n * The component for general slide effect transition.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle } from '../../utils/dom';\nimport { SLIDE } from \"../../constants/types\";\n\n\n/**\n * The component for general slide effect transition.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Hold the list element.\n\t *\n\t * @type {Element}\n\t */\n\tlet list;\n\n\t/**\n\t * Hold the onEnd callback function.\n\t *\n\t * @type {function}\n\t */\n\tlet endCallback;\n\n\treturn {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tlist = Components.Elements.list;\n\n\t\t\tSplide.on( 'transitionend', e => {\n\t\t\t\tif ( e.target === list && endCallback ) {\n\t\t\t\t\tendCallback();\n\t\t\t\t}\n\t\t\t}, list );\n\t\t},\n\n\t\t/**\n\t\t * Start transition.\n\t\t *\n\t\t * @param {number}   destIndex - Destination slide index that might be clone's.\n\t\t * @param {number}   newIndex  - New index.\n\t\t * @param {number}   prevIndex - Previous index.\n\t\t * @param {Object}   coord     - Destination coordinates.\n\t\t * @param {function} done      - Callback function must be invoked when transition is completed.\n\t\t */\n\t\tstart( destIndex, newIndex, prevIndex, coord, done ) {\n\t\t\tconst options   = Splide.options;\n\t\t\tconst edgeIndex = Components.Controller.edgeIndex;\n\t\t\tlet speed       = options.speed;\n\t\t\tendCallback = done;\n\n\t\t\tif ( Splide.is( SLIDE ) ) {\n\t\t\t\tif ( ( prevIndex === 0 && newIndex >= edgeIndex ) || ( prevIndex >= edgeIndex && newIndex === 0 ) ) {\n\t\t\t\t\tspeed = options.rewindSpeed || speed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapplyStyle( list, {\n\t\t\t\ttransition: `transform ${ speed }ms ${ options.easing }`,\n\t\t\t\ttransform : `translate(${ coord.x }px,${ coord.y }px)`,\n\t\t\t} );\n\t\t},\n\t};\n}","/**\n * The component for fade transition.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle } from '../../utils/dom';\nimport { unit } from \"../../utils/utils\";\n\n\n/**\n * The component for fade transition.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\tconst Fade = {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t * Apply transition style to the first slide.\n\t\t */\n\t\tmount() {\n\t\t\tapply( Splide.index );\n\t\t},\n\n\t\t/**\n\t\t * Start transition.\n\t\t *\n\t\t * @param {number}    destIndex - Destination slide index that might be clone's.\n\t\t * @param {number}    newIndex  - New index.\n\t\t * @param {number}    prevIndex - Previous index.\n\t\t * @param {Object}    coord     - Destination coordinates.\n\t\t * @param {function}  done      - Callback function must be invoked when transition is completed.\n\t\t */\n\t\tstart( destIndex, newIndex, prevIndex, coord, done ) {\n\t\t\tconst track = Components.Elements.track;\n\n\t\t\tapplyStyle( track, { height: unit( track.clientHeight ) } );\n\n\t\t\tapply( newIndex );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdone();\n\t\t\t\tapplyStyle( track, { height: '' } );\n\t\t\t} );\n\t\t},\n\t};\n\n\t/**\n\t * Apply transition style to the slide specified by the given index.\n\t *\n\t * @param {number} index - A slide index.\n\t */\n\tfunction apply( index ) {\n\t\tconst options = Splide.options;\n\n\t\tapplyStyle( Components.Elements.slides[ index ], {\n\t\t\ttransition: `opacity ${ options.speed }ms ${ options.easing }`,\n\t\t} );\n\t}\n\n\treturn Fade;\n}","/**\n * Provide a function for composing components.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { each } from '../utils/object';\nimport { Slide, Fade } from '../transitions';\nimport { FADE } from '../constants/types';\n\n\n/**\n * Compose components.\n *\n * @param {Splide}   Splide     - Splide instance.\n * @param {Object}   Components - Additional components.\n * @param {function} Transition - Change component for transition.\n *\n * @return {Object} - An object containing all components.\n */\nexport default function compose( Splide, Components, Transition ) {\n\tconst components = {};\n\n\teach( Components, ( Component, name ) => {\n\t\tcomponents[ name ] = Component( Splide, components, name.toLowerCase() );\n\t} );\n\n\tif ( ! Transition ) {\n\t\tTransition = Splide.is( FADE ) ? Fade : Slide;\n\t}\n\n\tcomponents.Transition = Transition( Splide, components );\n\n\treturn components;\n}","/**\n * Utility functions for outputting logs.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Prefix of an error massage.\n *\n * @type {string}\n */\nconst MESSAGE_PREFIX = '[SPLIDE]';\n\n\n/**\n * Display an error message on the browser console.\n *\n * @param {string} message - An error message.\n */\nexport function error( message ) {\n\tconsole.error( `${ MESSAGE_PREFIX } ${ message }` );\n}\n\n/**\n * Check existence of the given object and throw an error if it doesn't.\n *\n * @throws {Error}\n *\n * @param {*}      subject - A subject to be confirmed.\n * @param {string} message - An error message.\n */\nexport function exist( subject, message ) {\n\tif ( ! subject ) {\n\t\tthrow new Error( message );\n\t}\n}","/**\n * Export class names.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * A root class name.\n *\n * @type {string}\n */\nconst ROOT = 'splide';\n\n/**\n * The definition table of all classes for elements.\n * They might be modified by options.\n *\n * @type {Object}\n */\nexport const ELEMENT_CLASSES = {\n\troot      : ROOT,\n\tslider    : `${ ROOT }__slider`,\n\ttrack     : `${ ROOT }__track`,\n\tlist      : `${ ROOT }__list`,\n\tslide     : `${ ROOT }__slide`,\n\tcontainer : `${ ROOT }__slide__container`,\n\tarrows    : `${ ROOT }__arrows`,\n\tarrow     : `${ ROOT }__arrow`,\n\tprev      : `${ ROOT }__arrow--prev`,\n\tnext      : `${ ROOT }__arrow--next`,\n\tpagination: `${ ROOT }__pagination`,\n\tpage      : `${ ROOT }__pagination__page`,\n\tclone     : `${ ROOT }__slide--clone`,\n\tprogress  : `${ ROOT }__progress`,\n\tbar       : `${ ROOT }__progress__bar`,\n\tautoplay  : `${ ROOT }__autoplay`,\n\tplay      : `${ ROOT }__play`,\n\tpause     : `${ ROOT }__pause`,\n\tspinner   : `${ ROOT }__spinner`,\n\tsr        : `${ ROOT }__sr`,\n};\n\n/**\n * Definitions of status classes.\n *\n * @type {Object}\n */\nexport const STATUS_CLASSES = {\n\tactive : 'is-active',\n\tvisible: 'is-visible',\n\tloading: 'is-loading',\n};","/**\n * Export i18n texts as object.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Texts for i18n.\n *\n * @type {Object}\n */\nexport const I18N = {\n\tprev  : 'Previous slide',\n\tnext  : 'Next slide',\n\tfirst : 'Go to first slide',\n\tlast  : 'Go to last slide',\n\tslideX: 'Go to slide %s',\n\tpageX : 'Go to page %s',\n\tplay  : 'Start autoplay',\n\tpause : 'Pause autoplay',\n};","/**\n * Export default options.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { ELEMENT_CLASSES as classes } from \"./classes\";\nimport { I18N as i18n } from './i18n';\n\n\nexport const DEFAULTS = {\n\t/**\n\t * Determine a slider type.\n\t * - 'slide': Regular slider.\n\t * - 'loop' : Carousel slider.\n\t * - 'fade' : Change slides with fade transition. perPage, drag options are ignored.\n\t *\n\t * @type {string}\n\t */\n\ttype: 'slide',\n\n\t/**\n\t * Whether to rewind a slider before the first slide or after the last one.\n\t * In \"loop\" mode, this option is ignored.\n\t *\n\t * @type {boolean}\n\t */\n\trewind: false,\n\n\t/**\n\t * Transition speed in milliseconds.\n\t *\n\t * @type {number}\n\t */\n\tspeed: 400,\n\n\t/**\n\t * Transition speed on rewind in milliseconds.\n\t *\n\t * @type {number}\n\t */\n\trewindSpeed: 0,\n\n\t/**\n\t * Whether to prevent any actions while a slider is transitioning.\n\t * If false, navigation, drag and swipe work while the slider is running.\n\t * Even so, it will be forced to wait for transition in some cases in the loop mode to shift a slider.\n\t *\n\t * @type {boolean}\n\t */\n\twaitForTransition: true,\n\n\t/**\n\t * Define slider max width.\n\t *\n\t * @type {number}\n\t */\n\twidth: 0,\n\n\t/**\n\t * Define slider height.\n\t *\n\t * @type {number}\n\t */\n\theight: 0,\n\n\t/**\n\t * Fix width of slides. CSS format is allowed such as 10em, 80% or 80vw.\n\t * perPage number will be ignored when this option is falsy.\n\t *\n\t * @type {number|string}\n\t */\n\tfixedWidth: 0,\n\n\t/**\n\t * Fix height of slides. CSS format is allowed such as 10em, 80vh but % unit is not accepted.\n\t * heightRatio option will be ignored when this option is falsy.\n\t *\n\t * @type {number|string}\n\t */\n\tfixedHeight: 0,\n\n\t/**\n\t * Determine height of slides by ratio to a slider width.\n\t * This will be ignored when the fixedHeight is provided.\n\t *\n\t * @type {number}\n\t */\n\theightRatio: 0,\n\n\t/**\n\t * If true, slide width will be determined by the element width itself.\n\t * - perPage/perMove should be 1.\n\t *\n\t * @type {boolean}\n\t */\n\tautoWidth: false,\n\n\t/**\n\t * If true, slide height will be determined by the element width itself.\n\t * - perPage/perMove should be 1.\n\t *\n\t * @type {boolean}\n\t */\n\tautoHeight: false,\n\n\t/**\n\t * Determine how many slides should be displayed per page.\n\t *\n\t * @type {number}\n\t */\n\tperPage: 1,\n\n\t/**\n\t * Determine how many slides should be moved when a slider goes to next or perv.\n\t *\n\t * @type {number}\n\t */\n\tperMove: 0,\n\n\t/**\n\t * Determine manually how many clones should be generated on the left and right side.\n\t * The total number of clones will be twice of this number.\n\t *\n\t * @type {number}\n\t */\n\tclones: 0,\n\n\t/**\n\t * Start index.\n\t *\n\t * @type {number}\n\t */\n\tstart: 0,\n\n\t/**\n\t * Determine which slide should be focused if there are multiple slides in a page.\n\t * A string \"center\" is acceptable for centering slides.\n\t *\n\t * @type {boolean|number|string}\n\t */\n\tfocus: false,\n\n\t/**\n\t * Gap between slides. CSS format is allowed such as 1em.\n\t *\n\t * @type {number|string}\n\t */\n\tgap: 0,\n\n\t/**\n\t * Set padding-left/right in horizontal mode or padding-top/bottom in vertical one.\n\t * Give a single value to set a same size for both sides or\n\t * do an object for different sizes.\n\t * Also, CSS format is allowed such as 1em.\n\t *\n\t * @example\n\t * - 10: Number\n\t * - '1em': CSS format.\n\t * - { left: 0, right: 20 }: Object for different sizes in horizontal mode.\n\t * - { top: 0, bottom: 20 }: Object for different sizes in vertical mode.\n\t *\n\t * @type {number|string|Object}\n\t */\n\tpadding: 0,\n\n\t/**\n\t * Whether to append arrows.\n\t *\n\t * @type {boolean}\n\t */\n\tarrows: true,\n\n\t/**\n\t * Change the arrow SVG path like 'm7.61 0.807-2.12...'.\n\t *\n\t * @type {string}\n\t */\n\tarrowPath: '',\n\n\t/**\n\t * Whether to append pagination(indicator dots) or not.\n\t *\n\t * @type {boolean}\n\t */\n\tpagination: true,\n\n\t/**\n\t * Activate autoplay.\n\t *\n\t * @type {boolean}\n\t */\n\tautoplay: false,\n\n\t/**\n\t * Autoplay interval in milliseconds.\n\t *\n\t * @type {number}\n\t */\n\tinterval: 5000,\n\n\t/**\n\t * Whether to stop autoplay when a slider is hovered.\n\t *\n\t * @type {boolean}\n\t */\n\tpauseOnHover: true,\n\n\t/**\n\t * Whether to stop autoplay when a slider elements are focused.\n\t * True is recommended for accessibility.\n\t *\n\t * @type {boolean}\n\t */\n\tpauseOnFocus: true,\n\n\t/**\n\t * Whether to reset progress of the autoplay timer when resumed.\n\t *\n\t * @type {boolean}\n\t */\n\tresetProgress: true,\n\n\t/**\n\t * Loading images lazily.\n\t * Image src must be provided by a data-splide-lazy attribute.\n\t *\n\t * - false: Do nothing.\n\t * - 'nearby': Only images around an active slide will be loaded.\n\t * - 'sequential': All images will be sequentially loaded.\n\t *\n\t * @type {boolean|string}\n\t */\n\tlazyLoad: false,\n\n\t/**\n\t * This option works only when a lazyLoad option is \"nearby\".\n\t * Determine how many pages(not slides) around an active slide should be loaded beforehand.\n\t *\n\t * @type {number}\n\t */\n\tpreloadPages: 1,\n\n\t/**\n\t * Easing for CSS transition. For example, linear, ease or cubic-bezier().\n\t *\n\t * @type {string}\n\t */\n\teasing: 'cubic-bezier(.42,.65,.27,.99)',\n\n\t/**\n\t * Whether to enable keyboard shortcuts\n\t * - true or 'global': Listen to keydown event of the document.\n\t * - 'focused': Listen to the keydown event of the slider root element. tabindex=\"0\" will be added to the element.\n\t * - false: Disable keyboard shortcuts.\n\t *\n\t * @type {boolean|string}\n\t */\n\tkeyboard: 'global',\n\n\t/**\n\t * Whether to allow mouse drag and touch swipe.\n\t *\n\t * @type {boolean}\n\t */\n\tdrag: true,\n\n\t/**\n\t * The angle threshold for drag.\n\t * The slider starts moving only when the drag angle is less than this threshold.\n\t *\n\t * @type {number}\n\t */\n\tdragAngleThreshold: 30,\n\n\t/**\n\t * Distance threshold for determining if the action is \"flick\" or \"swipe\".\n\t * When a drag distance is over this value, the action will be treated as \"swipe\", not \"flick\".\n\t *\n\t * @type {number}\n\t */\n\tswipeDistanceThreshold: 150,\n\n\t/**\n\t * Velocity threshold for determining if the action is \"flick\" or \"swipe\".\n\t * Around 0.5 is recommended.\n\t *\n\t * @type {number}\n\t */\n\tflickVelocityThreshold: .6,\n\n\t/**\n\t * Determine power of flick. The larger number this is, the farther a slider runs by flick.\n\t * Around 500 is recommended.\n\t *\n\t * @type {number}\n\t */\n\tflickPower: 600,\n\n\t/**\n\t * Limit a number of pages to move by flick.\n\t *\n\t * @type {number}\n\t */\n\tflickMaxPages: 1,\n\n\t/**\n\t * Slider direction.\n\t * - 'ltr': Left to right.\n\t * - 'rtl': Right to left.\n\t * - 'ttb': Top to bottom.\n\t *\n\t * @type {string}\n\t */\n\tdirection: 'ltr',\n\n\t/**\n\t * Set img src to background-image of its parent element.\n\t * Images with various sizes can be displayed as same dimension without cropping work.\n\t * fixedHeight or heightRatio is required.\n\t *\n\t * @type {boolean}\n\t */\n\tcover: false,\n\n\t/**\n\t * Whether to enable accessibility(aria and screen reader texts) or not.\n\t *\n\t * @type {boolean}\n\t */\n\taccessibility: true,\n\n\t/**\n\t * Whether to add tabindex=\"0\" to visible slides or not.\n\t *\n\t * @type {boolean}\n\t */\n\tslideFocus: true,\n\n\t/**\n\t * Determine if a slider is navigation for another.\n\t * Use \"sync\" API to synchronize two sliders.\n\t *\n\t * @type {boolean}\n\t */\n\tisNavigation: false,\n\n\t/**\n\t * Whether to trim spaces before the fist slide or after the last one when \"focus\" is not 0.\n\t *\n\t * @type {boolean}\n\t */\n\ttrimSpace: true,\n\n\t/**\n\t * The \"is-active\" class is added after transition as default.\n\t * If true, it will be added before move.\n\t *\n\t * @type {boolean}\n\t */\n\tupdateOnMove: false,\n\n\t/**\n\t * Throttle duration in milliseconds for the resize event.\n\t *\n\t * @type {number}\n\t */\n\tthrottle: 100,\n\n\t/**\n\t * Whether to destroy a slider or not.\n\t *\n\t * @type {boolean}\n\t */\n\tdestroy: false,\n\n\t/**\n\t * Options for specific breakpoints.\n\t *\n\t * @example\n\t * {\n\t *   1000: {\n\t *     perPage: 3,\n\t *     gap: 20\n\t *   },\n\t *   600: {\n\t *     perPage: 1,\n\t *     gap: 5,\n\t *   }\n\t * }\n\t *\n\t * @type {boolean|Object}\n\t */\n\tbreakpoints: false,\n\n\t/**\n\t * Collection of class names.\n\t *\n\t * @see ./classes.js\n\t *\n\t * @type {Object}\n\t */\n\tclasses,\n\n\t/**\n\t * Collection of i18n texts.\n\t *\n\t * @see ./i18n.js\n\t *\n\t * @type {Object}\n\t */\n\ti18n,\n};","/**\n * Export state constants.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Splide has been just created.\n *\n * @type {number}\n */\nexport const CREATED = 1;\n\n/**\n * All components have been mounted and initialized.\n *\n * @type {number}\n */\nexport const MOUNTED = 2;\n\n/**\n * Splide is ready for transition.\n *\n * @type {number}\n */\nexport const IDLE = 3;\n\n/**\n * Splide is moving.\n *\n * @type {number}\n */\nexport const MOVING = 4;\n\n/**\n * Splide is moving.\n *\n * @type {number}\n */\nexport const DESTROYED = 5;","/**\n * The main class for applying Splide to an element.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport Event from './core/event';\nimport State from './core/state';\nimport compose from './core/composer';\nimport { error, exist } from './utils/error';\nimport { applyStyle } from './utils/dom';\nimport { merge, each, values } from './utils/object';\nimport { DEFAULTS } from './constants/defaults';\nimport * as STATES from './constants/states';\n\n\n/**\n * The main class for applying Splide to an element,\n * providing some APIs to control the behavior.\n */\nexport default class Splide {\n\t/**\n\t * Splide constructor.\n\t *\n\t * @throws {Error} When the given root element or selector is invalid.\n\t *\n\t * @param {Element|string}  root       - A selector for a root element or an element itself.\n\t * @param {Object}          options    - Optional. Options to change default behaviour.\n\t * @param {Object}          Components - Optional. Components.\n\t */\n\tconstructor( root, options = {}, Components = {} ) {\n\t\tthis.root = root instanceof Element ? root : document.querySelector( root );\n\t\texist( this.root, 'An invalid element/selector was given.' );\n\n\t\tthis.Components = null;\n\t\tthis.Event      = Event();\n\t\tthis.State      = State( STATES.CREATED );\n\t\tthis.STATES     = STATES;\n\n\t\tthis._o = merge( DEFAULTS, options );\n\t\tthis._i = 0;\n\t\tthis._c = Components;\n\t\tthis._e = {}; // Extensions\n\t\tthis._t = null; // Transition\n\t}\n\n\t/**\n\t * Compose and mount components.\n\t *\n\t * @param {Object}   Extensions - Optional. Additional components.\n\t * @param {function} Transition - Optional. Set a custom transition component.\n\t *\n\t * @return {Splide|undefined} - This instance or undefined if an exception occurred.\n\t */\n\tmount( Extensions = this._e, Transition = this._t ) {\n\t\t// Reset the state.\n\t\tthis.State.set( STATES.CREATED );\n\n\t\tthis._e = Extensions;\n\t\tthis._t = Transition;\n\n\t\tthis.Components = compose( this, merge( this._c, Extensions ), Transition );\n\n\t\ttry {\n\t\t\teach( this.Components, ( component, key ) => {\n\t\t\t\tconst required = component.required;\n\n\t\t\t\tif ( required === undefined || required ) {\n\t\t\t\t\tcomponent.mount && component.mount();\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.Components[ key ];\n\t\t\t\t}\n\t\t\t} );\n\t\t} catch ( e ) {\n\t\t\terror( e.message );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { State } = this;\n\t\tState.set( STATES.MOUNTED );\n\n\t\teach( this.Components, component => {\n\t\t\tcomponent.mounted && component.mounted();\n\t\t} );\n\n\t\tthis.emit( 'mounted' );\n\t\tState.set( STATES.IDLE );\n\t\tthis.emit( 'ready' );\n\n\t\tapplyStyle( this.root, { visibility: 'visible' } );\n\n\t\tthis\n\t\t\t.on( 'move drag', () => State.set( STATES.MOVING ) )\n\t\t\t.on( 'moved dragged', () => State.set( STATES.IDLE ) );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set sync target.\n\t *\n\t * @param {Splide} splide - A Splide instance.\n\t *\n\t * @return {Splide} - This instance.\n\t */\n\tsync( splide ) {\n\t\tthis.sibling = splide;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Register callback fired on the given event(s).\n\t *\n\t * @param {string}   events  - An event name. Use space to separate multiple events.\n\t *                             Also, namespace is accepted by dot, such as 'resize.{namespace}'.\n\t * @param {function} handler - A callback function.\n\t * @param {Element}  elm     - Optional. Native event will be listened to when this arg is provided.\n\t * @param {Object}   options - Optional. Options for addEventListener.\n\t *\n\t * @return {Splide} - This instance.\n\t */\n\ton( events, handler, elm = null, options = {} ) {\n\t\tthis.Event.on( events, handler, elm, options );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unsubscribe the given event.\n\t *\n\t * @param {string}  events - A event name.\n\t * @param {Element} elm    - Optional. removeEventListener() will be called when this arg is provided.\n\t *\n\t * @return {Splide} - This instance.\n\t */\n\toff( events, elm = null ) {\n\t\tthis.Event.off( events, elm );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Emit an event.\n\t *\n\t * @param {string} event - An event name.\n\t * @param {*}      args  - Any number of arguments passed to handlers.\n\t */\n\temit( event, ...args ) {\n\t\tthis.Event.emit( event, ...args );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Go to the slide specified by the given control.\n\t *\n\t * @param {string|number} control - A control pattern.\n\t * @param {boolean}       wait    - Optional. Whether to wait for transition.\n\t */\n\tgo( control, wait = this.options.waitForTransition ) {\n\t\tif ( this.State.is( STATES.IDLE ) || ( this.State.is( STATES.MOVING ) && ! wait ) ) {\n\t\t\tthis.Components.Controller.go( control, false );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Verify whether the slider type is the given one or not.\n\t *\n\t * @param {string} type - A slider type.\n\t *\n\t * @return {boolean} - True if the slider type is the provided type or false if not.\n\t */\n\tis( type ) {\n\t\treturn type === this._o.type;\n\t}\n\n\t/**\n\t * Insert a slide.\n\t *\n\t * @param {Element|string} slide - A slide element to be added.\n\t * @param {number}         index - A slide will be added at the position.\n\t */\n\tadd( slide, index = -1 ) {\n\t\tthis.Components.Elements.add( slide, index, this.refresh.bind( this ) );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove the slide designated by the index.\n\t *\n\t * @param {number} index - A slide index.\n\t */\n\tremove( index ) {\n\t\tthis.Components.Elements.remove( index );\n\t\tthis.refresh();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Destroy all Slide objects and clones and recreate them again.\n\t */\n\trefresh() {\n\t\tthis.emit( 'refresh:before' ).emit( 'refresh' ).emit( 'resize' );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Destroy the Splide.\n\t * \"Completely\" boolean is mainly for breakpoints.\n\t *\n\t * @param {boolean} completely - Destroy completely.\n\t */\n\tdestroy( completely = true ) {\n\t\t// Postpone destroy because it should be done after mount.\n\t\tif ( this.State.is( STATES.CREATED ) ) {\n\t\t\tthis.on( 'ready', () => this.destroy( completely ) );\n\t\t\treturn;\n\t\t}\n\n\t\tvalues( this.Components ).reverse().forEach( component => {\n\t\t\tcomponent.destroy && component.destroy( completely );\n\t\t} );\n\n\t\tthis.emit( 'destroy', completely );\n\n\t\t// Destroy all event handlers, including ones for native events.\n\t\tthis.Event.destroy();\n\t\tthis.State.set( STATES.DESTROYED );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Return the current slide index.\n\t *\n\t * @return {number} - The current slide index.\n\t // */\n\tget index() {\n\t\treturn this._i;\n\t}\n\n\t/**\n\t * Set the current slide index.\n\t *\n\t * @param {number|string} index - A new index.\n\t */\n\tset index( index ) {\n\t\tthis._i = parseInt( index );\n\t}\n\n\t/**\n\t * Return length of slides.\n\t * This is an alias of Elements.length.\n\t *\n\t * @return {number} - A number of slides.\n\t */\n\tget length() {\n\t\treturn this.Components.Elements.length;\n\t}\n\n\t/**\n\t * Return options.\n\t *\n\t * @return {Object} - Options object.\n\t */\n\tget options() {\n\t\treturn this._o;\n\t}\n\n\t/**\n\t * Set options with merging the given object to the current one.\n\t *\n\t * @param {Object} options - New options.\n\t */\n\tset options( options ) {\n\t\tconst created = this.State.is( STATES.CREATED );\n\n\t\tif ( ! created ) {\n\t\t\tthis.emit( 'update' );\n\t\t}\n\n\t\tthis._o = merge( this._o, options );\n\n\t\tif ( ! created ) {\n\t\t\tthis.emit( 'updated', this._o );\n\t\t}\n\t}\n\n\t/**\n\t * Return the class list.\n\t * This is an alias of Splide.options.classList.\n\t *\n\t * @return {Object} - An object containing all class list.\n\t */\n\tget classes() {\n\t\treturn this._o.classes;\n\t}\n\n\t/**\n\t * Return the i18n strings.\n\t * This is an alias of Splide.options.i18n.\n\t *\n\t * @return {Object} - An object containing all i18n strings.\n\t */\n\tget i18n() {\n\t\treturn this._o.i18n;\n\t}\n}","/**\n * The component for initializing options.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { error } from '../../utils/error';\nimport { getAttribute } from \"../../utils/dom\";\nimport { CREATED } from \"../../constants/states\";\n\n\n/**\n * The component for initializing options.\n *\n * @param {Splide} Splide - A Splide instance.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide ) => {\n\t/**\n\t * Retrieve options from the data attribute.\n\t * Note that IE10 doesn't support dataset property.\n\t *\n\t * @type {string}\n\t */\n\tconst options = getAttribute( Splide.root, 'data-splide' );\n\n\tif ( options ) {\n\t\ttry {\n\t\t\tSplide.options = JSON.parse( options );\n\t\t} catch ( e ) {\n\t\t\terror( e.message );\n\t\t}\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tif ( Splide.State.is( CREATED ) ) {\n\t\t\t\tSplide.index = Splide.options.start;\n\t\t\t}\n\t\t},\n\t};\n}","/**\n * Export layout modes.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Enumerate slides from left to right.\n *\n * @type {string}\n */\nexport const LTR = 'ltr';\n\n/**\n * Enumerate slides from right to left.\n *\n * @type {string}\n */\nexport const RTL = 'rtl';\n\n/**\n * Enumerate slides in a col.\n *\n * @type {string}\n */\nexport const TTB = 'ttb';","/**\n * The sub component for handling each slide.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport {\n\tchild,\n\taddClass,\n\tremoveClass,\n\thasClass,\n\tgetAttribute,\n\tsetAttribute,\n\tremoveAttribute,\n\tapplyStyle,\n\tgetRect,\n} from '../../utils/dom';\nimport { FADE, SLIDE } from '../../constants/types';\nimport { STATUS_CLASSES } from '../../constants/classes';\nimport { values } from \"../../utils/object\";\nimport { pad } from \"../../utils/utils\";\nimport { TTB } from \"../../constants/directions\";\n\n/**\n * Events for restoring original styles.\n *\n * @type {string}\n */\nconst STYLE_RESTORE_EVENTS = 'update.slide';\n\n\n/**\n * The sub component for handling each slide.\n *\n * @param {Splide}  Splide    - A Splide instance.\n * @param {number}  index     - An unique slide index.\n * @param {number}  realIndex - Clones should pass a real slide index.\n * @param {Element} slide     - A slide element.\n *\n * @return {Object} - The sub component object.\n */\nexport default ( Splide, index, realIndex, slide ) => {\n\t/**\n\t * Whether to update \"is-active\" class before or after transition.\n\t *\n\t * @type {boolean}\n\t */\n\tconst updateOnMove = Splide.options.updateOnMove;\n\n\t/**\n\t * Events when the slide status is updated.\n\t * Append a namespace to remove listeners later.\n\t *\n\t * @type {string}\n\t */\n\tconst STATUS_UPDATE_EVENTS = 'ready.slide updated.slide resized.slide moved.slide'\n\t\t+ ( updateOnMove ? ' move.slide' : '' );\n\n\t/**\n\t * Slide sub component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Slide = {\n\t\t/**\n\t\t * Slide element.\n\t\t *\n\t\t * @type {Element}\n\t\t */\n\t\tslide,\n\n\t\t/**\n\t\t * Slide index.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tindex,\n\n\t\t/**\n\t\t * Real index for clones.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\trealIndex,\n\n\t\t/**\n\t\t * Container element if available.\n\t\t *\n\t\t * @type {Element|undefined}\n\t\t */\n\t\tcontainer: child( slide, Splide.classes.container ),\n\n\t\t/**\n\t\t * Whether this is a cloned slide or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tisClone: realIndex > -1,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tif ( ! this.isClone ) {\n\t\t\t\tslide.id = `${ Splide.root.id }-slide${ pad( index + 1 ) }`;\n\t\t\t}\n\n\t\t\tSplide\n\t\t\t\t.on( STATUS_UPDATE_EVENTS, () => this.update() )\n\t\t\t\t.on( STYLE_RESTORE_EVENTS, restoreStyles )\n\t\t\t\t.on( 'click', () => Splide.emit( 'click', this ), slide );\n\n\t\t\t/*\n\t\t\t * Add \"is-active\" class to a clone element temporarily\n\t\t\t * and it will be removed on \"moved\" event.\n\t\t\t */\n\t\t\tif ( updateOnMove ) {\n\t\t\t\tSplide.on( 'move.slide', newIndex => {\n\t\t\t\t\tif ( newIndex === realIndex ) {\n\t\t\t\t\t\tupdate( true, false );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Make sure the slide is shown.\n\t\t\tapplyStyle( slide, { display: '' } );\n\n\t\t\t// Hold the original styles.\n\t\t\tthis.styles = getAttribute( slide, 'style' ) || '';\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tSplide.off( STATUS_UPDATE_EVENTS ).off( STYLE_RESTORE_EVENTS ).off( 'click', slide );\n\t\t\tremoveClass( slide, values( STATUS_CLASSES ) );\n\t\t\trestoreStyles();\n\t\t\tremoveAttribute( this.container, 'style' );\n\t\t},\n\n\t\t/**\n\t\t * Update active and visible status.\n\t\t */\n\t\tupdate() {\n\t\t\tupdate( this.isActive(), false );\n\t\t\tupdate( this.isVisible(), true );\n\t\t},\n\n\t\t/**\n\t\t * Check whether this slide is active or not.\n\t\t *\n\t\t * @return {boolean} - True if the slide is active or false if not.\n\t\t */\n\t\tisActive() {\n\t\t\treturn Splide.index === index;\n\t\t},\n\n\t\t/**\n\t\t * Check whether this slide is visible in the viewport or not.\n\t\t *\n\t\t * @return {boolean} - True if the slide is visible or false if not.\n\t\t */\n\t\tisVisible() {\n\t\t\tconst active = this.isActive();\n\n\t\t\tif ( Splide.is( FADE ) || active ) {\n\t\t\t\treturn active;\n\t\t\t}\n\n\t\t\tconst { ceil }  = Math;\n\t\t\tconst trackRect = getRect( Splide.Components.Elements.track );\n\t\t\tconst slideRect = getRect( slide );\n\n\t\t\tif ( Splide.options.direction === TTB ) {\n\t\t\t\treturn trackRect.top <= slideRect.top && slideRect.bottom <= ceil( trackRect.bottom );\n\t\t\t}\n\n\t\t\treturn trackRect.left <= slideRect.left && slideRect.right <= ceil( trackRect.right );\n\t\t},\n\n\t\t/**\n\t\t * Calculate how far this slide is from another slide and\n\t\t * return true if the distance is within the given number.\n\t\t *\n\t\t * @param {number} from   - Index of a target slide.\n\t\t * @param {number} within - True if the slide is within this number.\n\t\t *\n\t\t * @return {boolean} - True if the slide is within the number or false otherwise.\n\t\t */\n\t\tisWithin( from, within ) {\n\t\t\tlet diff = Math.abs( from - index );\n\n\t\t\tif ( ! Splide.is( SLIDE ) && ! this.isClone ) {\n\t\t\t\tdiff = Math.min( diff, Splide.length - diff );\n\t\t\t}\n\n\t\t\treturn diff < within;\n\t\t},\n\t};\n\n\t/**\n\t * Update classes for activity or visibility.\n\t *\n\t * @param {boolean} active        - Is active/visible or not.\n\t * @param {boolean} forVisibility - Toggle classes for activity or visibility.\n\t */\n\tfunction update( active, forVisibility ) {\n\t\tconst type      = forVisibility ? 'visible' : 'active';\n\t\tconst className = STATUS_CLASSES[ type ];\n\n\t\tif ( active ) {\n\t\t\taddClass( slide, className );\n\t\t\tSplide.emit( `${ type }`, Slide );\n\t\t} else {\n\t\t\tif ( hasClass( slide, className ) ) {\n\t\t\t\tremoveClass( slide, className );\n\t\t\t\tSplide.emit( `${ forVisibility ? 'hidden' : 'inactive' }`, Slide );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Restore the original styles.\n\t */\n\tfunction restoreStyles() {\n\t\tsetAttribute( slide, 'style', Slide.styles );\n\t}\n\n\treturn Slide;\n}","/**\n * The component for main elements.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport Slide from \"./slide\";\nimport {\n\tfind,\n\taddClass,\n\tremoveClass,\n\tchild,\n\tchildren,\n\tremove,\n\tappend,\n\tbefore,\n\tdomify,\n\tapplyStyle,\n\tloaded,\n} from \"../../utils/dom\";\nimport { exist } from \"../../utils/error\";\nimport { pad } from \"../../utils/utils\";\nimport { STATUS_CLASSES } from \"../../constants/classes\";\n\n/**\n * The property name for UID stored in a window object.\n *\n * @type {string}\n */\nconst UID_NAME = \"uid\";\n\n/**\n * The component for main elements.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default (Splide, Components) => {\n\t/**\n\t * Hold the root element.\n\t *\n\t * @type {Element}\n\t */\n\tconst root = Splide.root;\n\n\t/**\n\t * Hold the class list.\n\t *\n\t * @type {Object}\n\t */\n\tconst classes = Splide.classes;\n\n\t/**\n\t * Store Slide objects.\n\t *\n\t * @type {Array}\n\t */\n\tlet Slides = [];\n\n\t/*\n\t * Assign unique ID to the root element if it doesn't have the one.\n\t * Note that IE doesn't support padStart() to fill the uid by 0.\n\t */\n\tif (!root.id) {\n\t\tconst _window = typeof window === \"object\" ? window : global;\n\t\t_window.splide = _window.splide || {};\n\t\tlet uid = _window.splide[UID_NAME] || 0;\n\t\t_window.splide[UID_NAME] = ++uid;\n\t\troot.id = `splide${pad(uid)}`;\n\t}\n\n\t/**\n\t * Elements component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Elements = {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t * Collect main elements and store them as member properties.\n\t\t */\n\t\tmount() {\n\t\t\tthis.init();\n\n\t\t\tSplide.on(\"refresh\", () => {\n\t\t\t\tthis.destroy();\n\t\t\t\tthis.init();\n\t\t\t}).on(\"updated\", () => {\n\t\t\t\tremoveClass(root, getClasses());\n\t\t\t\taddClass(root, getClasses());\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tSlides.forEach((Slide) => {\n\t\t\t\tSlide.destroy();\n\t\t\t});\n\t\t\tSlides = [];\n\t\t\tremoveClass(root, getClasses());\n\t\t},\n\n\t\t/**\n\t\t * Initialization.\n\t\t */\n\t\tinit() {\n\t\t\tcollect();\n\t\t\taddClass(root, getClasses());\n\n\t\t\tthis.slides.forEach((slide, index) => {\n\t\t\t\tthis.register(slide, index, -1);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Register a slide to create a Slide object and handle its behavior.\n\t\t *\n\t\t * @param {Element} slide     - A slide element.\n\t\t * @param {number}  index     - A unique index. This can be negative.\n\t\t * @param {number}  realIndex - A real index for clones. Set -1 for real slides.\n\t\t */\n\t\tregister(slide, index, realIndex) {\n\t\t\tconst SlideObject = Slide(Splide, index, realIndex, slide);\n\t\t\tSlideObject.mount();\n\t\t\tSlides.push(SlideObject);\n\t\t},\n\n\t\t/**\n\t\t * Return the Slide object designated by the index.\n\t\t * Note that \"find\" is not supported by IE.\n\t\t *\n\t\t * @return {Object|undefined} - A Slide object if available. Undefined if not.\n\t\t */\n\t\tgetSlide(index) {\n\t\t\treturn Slides.filter((Slide) => Slide.index === index)[0];\n\t\t},\n\n\t\t/**\n\t\t * Return all Slide objects.\n\t\t *\n\t\t * @param {boolean} includeClones - Whether to include cloned slides or not.\n\t\t *\n\t\t * @return {Object[]} - Slide objects.\n\t\t */\n\t\tgetSlides(includeClones) {\n\t\t\treturn includeClones ? Slides : Slides.filter((Slide) => !Slide.isClone);\n\t\t},\n\n\t\t/**\n\t\t * Return Slide objects belonging to the given page.\n\t\t *\n\t\t * @param {number} page - A page number.\n\t\t *\n\t\t * @return {Object[]} - An array containing Slide objects.\n\t\t */\n\t\tgetSlidesByPage(page) {\n\t\t\tconst idx = Components.Controller.toIndex(page);\n\t\t\tconst options = Splide.options;\n\t\t\tconst max = options.focus !== false ? 1 : options.perPage;\n\n\t\t\treturn Slides.filter(({ index }) => idx <= index && index < idx + max);\n\t\t},\n\n\t\t/**\n\t\t * Insert a slide to a slider.\n\t\t * Need to refresh Splide after adding a slide.\n\t\t *\n\t\t * @param {Node|string} slide    - A slide element to be added.\n\t\t * @param {number}      index    - A slide will be added at the position.\n\t\t * @param {Function}    callback - Called right after the slide is added to the DOM tree.\n\t\t */\n\t\tadd(slide, index, callback) {\n\t\t\tif (typeof slide === \"string\") {\n\t\t\t\tslide = domify(slide);\n\t\t\t}\n\n\t\t\tif (slide instanceof Element) {\n\t\t\t\tconst ref = this.slides[index];\n\n\t\t\t\t// This will be removed in mount() of a Slide component.\n\t\t\t\tapplyStyle(slide, { display: \"none\" });\n\n\t\t\t\tif (ref) {\n\t\t\t\t\tbefore(slide, ref);\n\t\t\t\t\tthis.slides.splice(index, 0, slide);\n\t\t\t\t} else {\n\t\t\t\t\tappend(this.list, slide);\n\t\t\t\t\tthis.slides.push(slide);\n\t\t\t\t}\n\n\t\t\t\tloaded(slide, () => {\n\t\t\t\t\tcallback && callback(slide);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove a slide from a slider.\n\t\t * Need to refresh Splide after removing a slide.\n\t\t *\n\t\t * @param index - Slide index.\n\t\t */\n\t\tremove(index) {\n\t\t\tremove(this.slides.splice(index, 1)[0]);\n\t\t},\n\n\t\t/**\n\t\t * Trigger the provided callback for each Slide object.\n\t\t *\n\t\t * @param {Function} callback - A callback function. The first argument will be the Slide object.\n\t\t */\n\t\teach(callback) {\n\t\t\tSlides.forEach(callback);\n\t\t},\n\n\t\t/**\n\t\t * Return slides length without clones.\n\t\t *\n\t\t * @return {number} - Slide length.\n\t\t */\n\t\tget length() {\n\t\t\treturn this.slides.length;\n\t\t},\n\n\t\t/**\n\t\t * Return \"SlideObjects\" length including clones.\n\t\t *\n\t\t * @return {number} - Slide length including clones.\n\t\t */\n\t\tget total() {\n\t\t\treturn Slides.length;\n\t\t},\n\t};\n\n\t/**\n\t * Collect elements.\n\t */\n\tfunction collect() {\n\t\tElements.slider = child(root, classes.slider);\n\t\tElements.track = find(root, `.${classes.track}`);\n\t\tElements.list = child(Elements.track, classes.list);\n\n\t\texist(Elements.track && Elements.list, \"Track or list was not found.\");\n\n\t\tElements.slides = children(Elements.list, classes.slide);\n\n\t\tconst arrows = findParts(classes.arrows);\n\t\tElements.arrows = {\n\t\t\tprev: find(arrows, `.${classes.prev}`),\n\t\t\tnext: find(arrows, `.${classes.next}`),\n\t\t};\n\n\t\tconst autoplay = findParts(classes.autoplay);\n\t\tElements.bar = find(findParts(classes.progress), `.${classes.bar}`);\n\t\tElements.play = find(autoplay, `.${classes.play}`);\n\t\tElements.pause = find(autoplay, `.${classes.pause}`);\n\n\t\tElements.track.id = Elements.track.id || `${root.id}-track`;\n\t\tElements.list.id = Elements.list.id || `${root.id}-list`;\n\t}\n\n\t/**\n\t * Return class names for the root element.\n\t */\n\tfunction getClasses() {\n\t\tconst rootClass = classes.root;\n\t\tconst options = Splide.options;\n\n\t\treturn [\n\t\t\t`${rootClass}--${options.type}`,\n\t\t\t`${rootClass}--${options.direction}`,\n\t\t\toptions.drag ? `${rootClass}--draggable` : \"\",\n\t\t\toptions.isNavigation ? `${rootClass}--nav` : \"\",\n\t\t\tSTATUS_CLASSES.active,\n\t\t];\n\t}\n\n\t/**\n\t * Find parts only from children of the root or track.\n\t *\n\t * @return {Element} - A found element or undefined.\n\t */\n\tfunction findParts(className) {\n\t\treturn child(root, className) || child(Elements.slider, className);\n\t}\n\n\treturn Elements;\n};\n","/**\n * The component for controlling the track.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { LOOP } from \"../../constants/types\";\nimport { RTL } from '../../constants/directions';\nimport { between } from '../../utils/utils';\n\nconst { floor } = Math;\n\n\n/**\n * The component for controlling the track.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Store current options.\n\t *\n\t * @type {Object}\n\t */\n\tlet options;\n\n\t/**\n\t * True if the slide is LOOP mode.\n\t *\n\t * @type {boolean}\n\t */\n\tlet isLoop;\n\n\t/**\n\t * Controller component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Controller = {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\toptions = Splide.options;\n\t\t\tisLoop  = Splide.is( LOOP );\n\t\t\tbind();\n\t\t},\n\n\t\t/**\n\t\t * Make track run by the given control.\n\t\t * - \"+{i}\" : Increment the slide index by i.\n\t\t * - \"-{i}\" : Decrement the slide index by i.\n\t\t * - \"{i}\"  : Go to the slide whose index is i.\n\t\t * - \">\"    : Go to next page.\n\t\t * - \"<\"    : Go to prev page.\n\t\t * - \">{i}\" : Go to page i.\n\t\t *\n\t\t * @param {string|number} control  - A control pattern.\n\t\t * @param {boolean}       silently - Go to the destination without event emission.\n\t\t */\n\t\tgo( control, silently ) {\n\t\t\tconst destIndex = this.trim( this.parse( control ) );\n\t\t\tComponents.Track.go( destIndex, this.rewind( destIndex ), silently );\n\t\t},\n\n\t\t/**\n\t\t * Parse the given control and return the destination index for the track.\n\t\t *\n\t\t * @param {string} control - A control target pattern.\n\t\t *\n\t\t * @return {number} - A parsed target.\n\t\t */\n\t\tparse( control ) {\n\t\t\tlet index = Splide.index;\n\n\t\t\tconst matches   = String( control ).match( /([+\\-<>]+)(\\d+)?/ );\n\t\t\tconst indicator = matches ? matches[1] : '';\n\t\t\tconst number    = matches ? parseInt( matches[2] ) : 0;\n\n\t\t\tswitch ( indicator ) {\n\t\t\t\tcase '+':\n\t\t\t\t\tindex += number || 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '-':\n\t\t\t\t\tindex -= number || 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '>':\n\t\t\t\tcase '<':\n\t\t\t\t\tindex = parsePage( number, index, indicator === '<' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tindex = parseInt( control );\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\t/**\n\t\t * Compute index from the given page number.\n\t\t *\n\t\t * @param {number} page - Page number.\n\t\t *\n\t\t * @return {number} - A computed page number.\n\t\t */\n\t\ttoIndex( page ) {\n\t\t\tif ( hasFocus() ) {\n\t\t\t\treturn page;\n\t\t\t}\n\n\t\t\tconst length  = Splide.length;\n\t\t\tconst perPage = options.perPage;\n\n\t\t\tlet index = page * perPage;\n\t\t\tindex = index - ( this.pageLength * perPage - length ) * floor( index / length );\n\n\t\t\t// Adjustment for the last page.\n\t\t\tif ( length - perPage <= index && index < length ) {\n\t\t\t\tindex = length - perPage;\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\t/**\n\t\t * Compute page number from the given slide index.\n\t\t *\n\t\t * @param {number} index - Slide index.\n\t\t *\n\t\t * @return {number} - A computed page number.\n\t\t */\n\t\ttoPage( index ) {\n\t\t\tif ( hasFocus() ) {\n\t\t\t\treturn index;\n\t\t\t}\n\n\t\t\tconst length  = Splide.length;\n\t\t\tconst perPage = options.perPage;\n\n\t\t\t// Make the last \"perPage\" number of slides belong to the last page.\n\t\t\tif ( length - perPage <= index && index < length ) {\n\t\t\t\treturn floor( ( length - 1 ) / perPage );\n\t\t\t}\n\n\t\t\treturn floor( index / perPage );\n\t\t},\n\n\t\t/**\n\t\t * Trim the given index according to the current mode.\n\t\t * Index being returned could be less than 0 or greater than the length in Loop mode.\n\t\t *\n\t\t * @param {number} index - An index being trimmed.\n\t\t *\n\t\t * @return {number} - A trimmed index.\n\t\t */\n\t\ttrim( index ) {\n\t\t\tif ( ! isLoop ) {\n\t\t\t\tindex = options.rewind ? this.rewind( index ) : between( index, 0, this.edgeIndex );\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\t/**\n\t\t * Rewind the given index if it's out of range.\n\t\t *\n\t\t * @param {number} index - An index.\n\t\t *\n\t\t * @return {number} - A rewound index.\n\t\t */\n\t\trewind( index ) {\n\t\t\tconst edge = this.edgeIndex;\n\n\t\t\tif ( isLoop ) {\n\t\t\t\twhile( index > edge ) {\n\t\t\t\t\tindex -= edge + 1;\n\t\t\t\t}\n\n\t\t\t\twhile( index < 0 ) {\n\t\t\t\t\tindex += edge + 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( index > edge ) {\n\t\t\t\t\tindex = 0;\n\t\t\t\t} else if ( index < 0 ) {\n\t\t\t\t\tindex = edge;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\t/**\n\t\t * Check if the direction is \"rtl\" or not.\n\t\t *\n\t\t * @return {boolean} - True if \"rtl\" or false if not.\n\t\t */\n\t\tisRtl() {\n\t\t\treturn options.direction === RTL;\n\t\t},\n\n\t\t/**\n\t\t * Return the page length.\n\t\t *\n\t\t * @return {number} - Max page number.\n\t\t */\n\t\tget pageLength() {\n\t\t\tconst length = Splide.length;\n\t\t\treturn hasFocus() ? length : Math.ceil( length / options.perPage );\n\t\t},\n\n\t\t/**\n\t\t * Return the edge index.\n\t\t *\n\t\t * @return {number} - Edge index.\n\t\t */\n\t\tget edgeIndex() {\n\t\t\tconst length = Splide.length;\n\n\t\t\tif ( ! length ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif ( hasFocus() || options.isNavigation || isLoop ) {\n\t\t\t\treturn length - 1;\n\t\t\t}\n\n\t\t\treturn length - options.perPage;\n\t\t},\n\n\t\t/**\n\t\t * Return the index of the previous slide.\n\t\t *\n\t\t * @return {number} - The index of the previous slide if available. -1 otherwise.\n\t\t */\n\t\tget prevIndex() {\n\t\t\tlet prev = Splide.index - 1;\n\n\t\t\tif ( isLoop || options.rewind ) {\n\t\t\t\tprev = this.rewind( prev );\n\t\t\t}\n\n\t\t\treturn prev > -1 ? prev : -1;\n\t\t},\n\n\t\t/**\n\t\t * Return the index of the next slide.\n\t\t *\n\t\t * @return {number} - The index of the next slide if available. -1 otherwise.\n\t\t */\n\t\tget nextIndex() {\n\t\t\tlet next = Splide.index + 1;\n\n\t\t\tif ( isLoop || options.rewind ) {\n\t\t\t\tnext = this.rewind( next );\n\t\t\t}\n\n\t\t\treturn ( Splide.index < next && next <= this.edgeIndex ) || next === 0 ? next : -1;\n\t\t},\n\t};\n\n\t/**\n\t * Listen to some events.\n\t */\n\tfunction bind() {\n\t\tSplide\n\t\t\t.on( 'move', newIndex => { Splide.index = newIndex } )\n\t\t\t.on( 'updated refresh', newOptions => {\n\t\t\t\toptions = newOptions || options;\n\t\t\t\tSplide.index = between( Splide.index, 0, Controller.edgeIndex );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Verify if the focus option is available or not.\n\t *\n\t * @return {boolean} - True if a slider has the focus option.\n\t */\n\tfunction hasFocus() {\n\t\treturn options.focus !== false;\n\t}\n\n\t/**\n\t * Return the next or previous page index computed by the page number and current index.\n\t *\n\t * @param {number}  number - Specify the page number.\n\t * @param {number}  index  - Current index.\n\t * @param {boolean} prev   - Prev or next.\n\t *\n\t * @return {number} - Slide index.\n\t */\n\tfunction parsePage( number, index, prev ) {\n\t\tif ( number > -1 ) {\n\t\t\treturn Controller.toIndex( number );\n\t\t}\n\n\t\tconst perMove = options.perMove;\n\t\tconst sign    = prev ? -1 : 1;\n\n\t\tif ( perMove ) {\n\t\t\treturn index + perMove * sign;\n\t\t}\n\n\t\treturn Controller.toIndex( Controller.toPage( index ) + sign );\n\t}\n\n\treturn Controller;\n}","/**\n * The component for moving list in the track.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle, getRect } from '../../utils/dom';\nimport { between } from \"../../utils/utils\";\nimport { LOOP, FADE } from '../../constants/types';\nimport { RTL, TTB } from '../../constants/directions';\nimport { MOVING } from \"../../constants/states\";\n\nconst { abs } = Math;\n\n\n/**\n * The component for moving list in the track.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Hold the Layout component.\n\t *\n\t * @type {Object}\n\t */\n\tlet Layout;\n\n\t/**\n\t * Hold the Layout component.\n\t *\n\t * @type {Object}\n\t */\n\tlet Elements;\n\n\t/**\n\t * Store the list element.\n\t *\n\t * @type {Element}\n\t */\n\tlet list;\n\n\t/**\n\t * Whether the current direction is vertical or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isVertical = Splide.options.direction === TTB;\n\n\t/**\n\t * Whether the slider type is FADE or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isFade = Splide.is( FADE );\n\n\t/**\n\t * Whether the slider direction is RTL or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isRTL = Splide.options.direction === RTL;\n\n\t/**\n\t * This will be true while transitioning from the last index to the first one.\n\t *\n\t * @type {boolean}\n\t */\n\tlet isLoopPending = false;\n\n\t/**\n\t * Sign for the direction. Only RTL mode uses the positive sign.\n\t *\n\t * @type {number}\n\t */\n\tconst sign = isRTL ? 1 : -1;\n\n\t/**\n\t * Track component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Track = {\n\t\t/**\n\t\t * Make public the sign defined locally.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tsign,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tElements = Components.Elements;\n\t\t\tLayout   = Components.Layout;\n\t\t\tlist     = Elements.list;\n\t\t},\n\n\t\t/**\n\t\t * Called after the component is mounted.\n\t\t * The resize event must be registered after the Layout's one is done.\n\t\t */\n\t\tmounted() {\n\t\t\tif ( ! isFade ) {\n\t\t\t\tthis.jump( 0 );\n\t\t\t\tSplide.on( 'mounted resize updated', () => { this.jump( Splide.index ) } );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Go to the given destination index.\n\t\t * After arriving there, the track is jump to the new index without animation, mainly for loop mode.\n\t\t *\n\t\t * @param {number}  destIndex - A destination index.\n\t\t *                              This can be negative or greater than slides length for reaching clones.\n\t\t * @param {number}  newIndex  - An actual new index. They are always same in Slide and Rewind mode.\n\t\t * @param {boolean} silently  - If true, suppress emitting events.\n\t\t */\n\t\tgo( destIndex, newIndex, silently ) {\n\t\t\tconst newPosition = getTrimmedPosition( destIndex );\n\t\t\tconst prevIndex   = Splide.index;\n\n\t\t\t// Prevent any actions while transitioning from the last index to the first one for jump.\n\t\t\tif ( Splide.State.is( MOVING ) && isLoopPending ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisLoopPending = destIndex !== newIndex;\n\n\t\t\tif ( ! silently ) {\n\t\t\t\tSplide.emit( 'move', newIndex, prevIndex, destIndex );\n\t\t\t}\n\n\t\t\tif ( Math.abs( newPosition - this.position ) >= 1 || isFade ) {\n\t\t\t\tComponents.Transition.start( destIndex, newIndex, prevIndex, this.toCoord( newPosition ), () => {\n\t\t\t\t\tonTransitionEnd( destIndex, newIndex, prevIndex, silently );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tif ( destIndex !== prevIndex && Splide.options.trimSpace === 'move' ) {\n\t\t\t\t\tComponents.Controller.go( destIndex + destIndex - prevIndex, silently );\n\t\t\t\t} else {\n\t\t\t\t\tonTransitionEnd( destIndex, newIndex, prevIndex, silently );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Move the track to the specified index.\n\t\t *\n\t\t * @param {number} index - A destination index where the track jumps.\n\t\t */\n\t\tjump( index ) {\n\t\t\tthis.translate( getTrimmedPosition( index ) );\n\t\t},\n\n\t\t/**\n\t\t * Set the list position by CSS translate property.\n\t\t *\n\t\t * @param {number} position - A new position value.\n\t\t */\n\t\ttranslate( position ) {\n\t\t\tapplyStyle( list, { transform: `translate${ isVertical ? 'Y' : 'X' }(${ position }px)` } );\n\t\t},\n\n\t\t/**\n\t\t * Cancel the transition and set the list position.\n\t\t * Also, loop the slider if necessary.\n\t\t */\n\t\tcancel() {\n\t\t\tif ( Splide.is( LOOP ) ) {\n\t\t\t\tthis.shift();\n\t\t\t} else {\n\t\t\t\t// Ensure the current position.\n\t\t\t\tthis.translate( this.position );\n\t\t\t}\n\n\t\t\tapplyStyle( list, { transition: '' } );\n\t\t},\n\n\t\t/**\n\t\t * Shift the slider if it exceeds borders on the edge.\n\t\t */\n\t\tshift() {\n\t\t\tlet position = abs( this.position );\n\n\t\t\tconst left      = abs( this.toPosition( 0 ) );\n\t\t\tconst right     = abs( this.toPosition( Splide.length ) );\n\t\t\tconst innerSize = right - left;\n\n\t\t\tif ( position < left ) {\n\t\t\t\tposition += innerSize;\n\t\t\t} else if ( position > right ) {\n\t\t\t\tposition -= innerSize;\n\t\t\t}\n\n\t\t\tthis.translate( sign * position );\n\t\t},\n\n\t\t/**\n\t\t * Trim redundant spaces on the left or right edge if necessary.\n\t\t *\n\t\t * @param {number} position - Position value to be trimmed.\n\t\t *\n\t\t * @return {number} - Trimmed position.\n\t\t */\n\t\ttrim( position ) {\n\t\t\tif ( ! Splide.options.trimSpace || Splide.is( LOOP ) ) {\n\t\t\t\treturn position;\n\t\t\t}\n\n\t\t\tconst edge = sign * ( Layout.totalSize() - Layout.size - Layout.gap );\n\t\t\treturn between( position, edge, 0 );\n\t\t},\n\n\t\t/**\n\t\t * Calculate the closest slide index from the given position.\n\t\t *\n\t\t * @param {number} position - A position converted to an slide index.\n\t\t *\n\t\t * @return {number} - The closest slide index.\n\t\t */\n\t\ttoIndex( position ) {\n\t\t\tlet index = 0;\n\t\t\tlet minDistance = Infinity;\n\n\t\t\tElements.getSlides( true ).forEach( Slide => {\n\t\t\t\tconst slideIndex = Slide.index;\n\t\t\t\tconst distance   = abs( this.toPosition( slideIndex ) - position );\n\n\t\t\t\tif ( distance < minDistance ) {\n\t\t\t\t\tminDistance = distance;\n\t\t\t\t\tindex = slideIndex;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn index;\n\t\t},\n\n\t\t/**\n\t\t * Return coordinates object by the given position.\n\t\t *\n\t\t * @param {number} position - A position value.\n\t\t *\n\t\t * @return {Object} - A coordinates object.\n\t\t */\n\t\ttoCoord( position ) {\n\t\t\treturn {\n\t\t\t\tx: isVertical ? 0 : position,\n\t\t\t\ty: isVertical ? position : 0,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Calculate the track position by a slide index.\n\t\t *\n\t\t * @param {number} index - Slide index.\n\t\t *\n\t\t * @return {Object} - Calculated position.\n\t\t */\n\t\ttoPosition( index ) {\n\t\t\tconst position = Layout.totalSize( index ) - Layout.slideSize( index ) - Layout.gap;\n\t\t\treturn sign * ( position + this.offset( index ) );\n\t\t},\n\n\t\t/**\n\t\t * Return the current offset value, considering direction.\n\t\t *\n\t\t * @return {number} - Offset amount.\n\t\t */\n\t\toffset( index ) {\n\t\t\tconst { focus } = Splide.options;\n\t\t\tconst slideSize = Layout.slideSize( index );\n\n\t\t\tif ( focus === 'center' ) {\n\t\t\t\treturn -( Layout.size - slideSize ) / 2;\n\t\t\t}\n\n\t\t\treturn -( parseInt( focus ) || 0 ) * ( slideSize + Layout.gap );\n\t\t},\n\n\t\t/**\n\t\t * Return the current position.\n\t\t * This returns the correct position even while transitioning by CSS.\n\t\t *\n\t\t * @return {number} - Current position.\n\t\t */\n\t\tget position() {\n\t\t\tconst prop = isVertical ? 'top' : isRTL ? 'right' : 'left';\n\t\t\treturn getRect( list )[ prop ] - ( getRect( Elements.track )[ prop ] - Layout.padding[ prop ] * sign );\n\t\t},\n\t};\n\n\t/**\n\t * Called whenever slides arrive at a destination.\n\t *\n\t * @param {number}  destIndex - A destination index.\n\t * @param {number}  newIndex  - A new index.\n\t * @param {number}  prevIndex - A previous index.\n\t * @param {boolean} silently  - If true, suppress emitting events.\n\t */\n\tfunction onTransitionEnd( destIndex, newIndex, prevIndex, silently ) {\n\t\tapplyStyle( list, { transition: '' } );\n\t\tisLoopPending = false;\n\n\t\tif ( ! isFade ) {\n\t\t\tTrack.jump( newIndex );\n\t\t}\n\n\t\tif ( ! silently ) {\n\t\t\tSplide.emit( 'moved', newIndex, prevIndex, destIndex );\n\t\t}\n\t}\n\n\t/**\n\t * Convert index to the trimmed position.\n\t *\n\t * @return {number} - Trimmed position.\n\t */\n\tfunction getTrimmedPosition( index ) {\n\t\treturn Track.trim( Track.toPosition( index ) );\n\t}\n\n\treturn Track;\n}","/**\n * The component for cloning some slides for \"loop\" mode of the track.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { addClass, removeAttribute, append, before, remove } from '../../utils/dom';\nimport { LOOP } from '../../constants/types';\nimport { TTB } from \"../../constants/directions\";\nimport { toPixel } from \"../../utils/utils\";\n\n\n/**\n * The component for cloning some slides for \"loop\" mode of the track.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Store information of all clones.\n\t *\n\t * @type {Array}\n\t */\n\tlet clones = [];\n\n\t/**\n\t * Store the current clone count on one side.\n\t *\n\t * @type {number}\n\t */\n\tlet cloneCount = 0;\n\n\t/**\n\t * Keep Elements component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Clones component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Clones = {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tif ( Splide.is( LOOP ) ) {\n\t\t\t\tinit();\n\n\t\t\t\tSplide\n\t\t\t\t\t.on( 'refresh:before', () => { this.destroy() } )\n\t\t\t\t\t.on( 'refresh', init )\n\t\t\t\t\t.on( 'resize', () => {\n\t\t\t\t\t\tif ( cloneCount !== getCloneCount() ) {\n\t\t\t\t\t\t\t// Destroy before refresh not to collect clones by the Elements component.\n\t\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t\t\tSplide.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tremove( clones );\n\t\t\tclones = [];\n\t\t},\n\n\t\t/**\n\t\t * Return all clones.\n\t\t *\n\t\t * @return {Element[]} - Cloned elements.\n\t\t */\n\t\tget clones() {\n\t\t\treturn clones;\n\t\t},\n\n\t\t/**\n\t\t * Return clone length.\n\t\t *\n\t\t * @return {number} - A length of clones.\n\t\t */\n\t\tget length() {\n\t\t\treturn clones.length;\n\t\t},\n\t};\n\n\t/**\n\t * Initialization.\n\t */\n\tfunction init() {\n\t\tClones.destroy();\n\t\tcloneCount = getCloneCount();\n\t\tgenerateClones( cloneCount );\n\t}\n\n\t/**\n\t * Generate and append/prepend clones.\n\t *\n\t * @param {number} count - The half number of clones.\n\t */\n\tfunction generateClones( count ) {\n\t\tconst { length, register } = Elements;\n\n\t\tif ( length ) {\n\t\t\tlet slides = Elements.slides;\n\n\t\t\twhile ( slides.length < count ) {\n\t\t\t\tslides = slides.concat( slides );\n\t\t\t}\n\n\t\t\t// Clones after the last element.\n\t\t\tslides.slice( 0, count ).forEach( ( elm, index ) => {\n\t\t\t\tconst clone = cloneDeeply( elm );\n\t\t\t\tappend( Elements.list, clone );\n\t\t\t\tclones.push( clone );\n\n\t\t\t\tregister( clone, index + length, index % length );\n\t\t\t} );\n\n\t\t\t// Clones before the first element.\n\t\t\tslides.slice( -count ).forEach( ( elm, index ) => {\n\t\t\t\tconst clone = cloneDeeply( elm );\n\t\t\t\tbefore( clone, slides[0] );\n\t\t\t\tclones.push( clone );\n\n\t\t\t\tregister( clone, index - count, ( length + index - count % length ) % length );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Return half count of clones to be generated.\n\t * Clone count is determined by:\n\t * - \"clones\" value in the options.\n\t * - Number of slides that can be placed in a view in \"fixed\" mode.\n\t * - Max pages a flick action can move.\n\t * - Whether the slide length is enough for perPage.\n\t *\n\t * @return {number} - Count for clones.\n\t */\n\tfunction getCloneCount() {\n\t\tconst options = Splide.options;\n\n\t\tif ( options.clones ) {\n\t\t\treturn options.clones;\n\t\t}\n\n\t\t// Use the slide length in autoWidth mode because the number cannot be calculated.\n\t\tlet baseCount = options.autoWidth || options.autoHeight ? Elements.length : options.perPage;\n\n\t\tconst dimension = options.direction === TTB ? 'Height' : 'Width';\n\t\tconst fixedSize = toPixel( Splide.root, options[ `fixed${ dimension }` ] );\n\n\t\tif ( fixedSize ) {\n\t\t\t// Roughly calculate the count. This needs not to be strict.\n\t\t\tbaseCount = Math.ceil( Elements.track[ `client${ dimension }` ] / fixedSize );\n\t\t}\n\n\t\treturn baseCount * ( options.drag ? options.flickMaxPages + 1 : 1 );\n\t}\n\n\t/**\n\t * Clone deeply the given element.\n\t *\n\t * @param {Element} elm - An element being duplicated.\n\t *\n\t * @return {Node} - A cloned node(element).\n\t */\n\tfunction cloneDeeply( elm ) {\n\t\tconst clone = elm.cloneNode( true );\n\t\taddClass( clone, Splide.classes.clone );\n\n\t\t// ID should not be duplicated.\n\t\tremoveAttribute( clone, 'id' );\n\t\treturn clone;\n\t}\n\n\treturn Clones;\n}","/**\n * The resolver component for horizontal layout.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle, getRect } from \"../../../utils/dom\";\nimport { unit, toPixel } from \"../../../utils/utils\";\nimport { RTL } from '../../../constants/directions';\n\n\n/**\n * The resolver component for horizontal layout.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The resolver object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Keep the Elements component.\n\t *\n\t * @type {string}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Keep the root element.\n\t *\n\t * @type {Element}\n\t */\n\tconst root = Splide.root;\n\n\t/**\n\t * Keep the track element.\n\t *\n\t * @type {Element}\n\t */\n\tlet track;\n\n\t/**\n\t * Keep the latest options.\n\t *\n\t * @type {Element}\n\t */\n\tlet options = Splide.options;\n\n\treturn {\n\t\t/**\n\t\t * Margin property name.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tmargin: 'margin' + ( options.direction === RTL ? 'Left' : 'Right' ),\n\n\t\t/**\n\t\t * Always 0 because the height will be determined by inner contents.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\theight: 0,\n\n\t\t/**\n\t\t * Initialization.\n\t\t */\n\t\tinit() {\n\t\t\tthis.resize();\n\t\t},\n\n\t\t/**\n\t\t * Resize gap and padding.\n\t\t * This must be called on init.\n\t\t */\n\t\tresize() {\n\t\t\toptions = Splide.options;\n\t\t\ttrack   = Elements.track;\n\n\t\t\tthis.gap = toPixel( root, options.gap );\n\n\t\t\tconst padding = options.padding;\n\t\t\tconst left    = toPixel( root, padding.left || padding );\n\t\t\tconst right   = toPixel( root, padding.right || padding );\n\n\t\t\tthis.padding = { left, right };\n\t\t\tapplyStyle( track, { paddingLeft : unit( left ), paddingRight: unit( right ) } );\n\t\t},\n\n\t\t/**\n\t\t * Return total width from the left of the list to the right of the slide specified by the provided index.\n\t\t *\n\t\t * @param {number} index - Optional. A slide index. If undefined, total width of the slider will be returned.\n\t\t *\n\t\t * @return {number} - Total width to the right side of the specified slide, or 0 for an invalid index.\n\t\t */\n\t\ttotalWidth( index = Splide.length - 1 ) {\n\t\t\tconst Slide = Elements.getSlide( index );\n\n\t\t\tlet width = 0;\n\n\t\t\tif ( Slide ) {\n\t\t\t\tconst slideRect = getRect( Slide.slide );\n\t\t\t\tconst listRect  = getRect( Elements.list );\n\n\t\t\t\tif ( options.direction === RTL ) {\n\t\t\t\t\twidth = listRect.right - slideRect.left;\n\t\t\t\t} else {\n\t\t\t\t\twidth = slideRect.right - listRect.left;\n\t\t\t\t}\n\n\t\t\t\twidth += this.gap;\n\t\t\t}\n\n\t\t\treturn width;\n\t\t},\n\n\t\t/**\n\t\t * Return the slide width in px.\n\t\t *\n\t\t * @param {number} index - Slide index.\n\t\t *\n\t\t * @return {number} - The slide width.\n\t\t */\n\t\tslideWidth( index ) {\n\t\t\tif ( options.autoWidth ) {\n\t\t\t\tconst Slide = Elements.getSlide( index );\n\t\t\t\treturn Slide ? Slide.slide.offsetWidth : 0;\n\t\t\t}\n\n\t\t\tconst width = options.fixedWidth || ( ( this.width + this.gap ) / options.perPage ) - this.gap;\n\t\t\treturn toPixel( root, width );\n\t\t},\n\n\t\t/**\n\t\t * Return the slide height in px.\n\t\t *\n\t\t * @return {number} - The slide height.\n\t\t */\n\t\tslideHeight() {\n\t\t\tconst height = options.height || options.fixedHeight || this.width * options.heightRatio;\n\t\t\treturn toPixel( root, height );\n\t\t},\n\n\t\t/**\n\t\t * Return slider width without padding.\n\t\t *\n\t\t * @return {number} - Current slider width.\n\t\t */\n\t\tget width() {\n\t\t\treturn track.clientWidth - this.padding.left - this.padding.right;\n\t\t},\n\t}\n}","/**\n * The resolver component for vertical layout.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle, getRect } from \"../../../utils/dom\";\nimport { toPixel, unit } from \"../../../utils/utils\";\nimport { exist } from \"../../../utils/error\";\n\n\n/**\n * The resolver component for vertical layout.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The resolver object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Keep the Elements component.\n\t *\n\t * @type {string}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Keep the root element.\n\t *\n\t * @type {Element}\n\t */\n\tconst root = Splide.root;\n\n\t/**\n\t * Keep the track element.\n\t *\n\t * @type {Element}\n\t */\n\tlet track;\n\n\t/**\n\t * Keep the latest options.\n\t *\n\t * @type {Element}\n\t */\n\tlet options;\n\n\treturn {\n\t\t/**\n\t\t * Margin property name.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tmargin: 'marginBottom',\n\n\t\t/**\n\t\t * Initialization.\n\t\t */\n\t\tinit() {\n\t\t\tthis.resize();\n\t\t},\n\n\t\t/**\n\t\t * Resize gap and padding.\n\t\t * This must be called on init.\n\t\t */\n\t\tresize() {\n\t\t\toptions = Splide.options;\n\t\t\ttrack   = Elements.track;\n\n\t\t\tthis.gap = toPixel( root, options.gap );\n\n\t\t\tconst padding = options.padding;\n\t\t\tconst top     = toPixel( root, padding.top || padding );\n\t\t\tconst bottom  = toPixel( root, padding.bottom || padding );\n\n\t\t\tthis.padding = { top, bottom };\n\t\t\tapplyStyle( track, { paddingTop : unit( top ), paddingBottom: unit( bottom ) } );\n\t\t},\n\n\t\t/**\n\t\t * Return total height from the top of the list to the bottom of the slide specified by the provided index.\n\t\t *\n\t\t * @param {number} index - Optional. A slide index. If undefined, total height of the slider will be returned.\n\t\t *\n\t\t * @return {number} - Total height to the bottom of the specified slide, or 0 for an invalid index.\n\t\t */\n\t\ttotalHeight( index = Splide.length - 1 ) {\n\t\t\tconst Slide = Elements.getSlide( index );\n\n\t\t\tif ( Slide ) {\n\t\t\t\treturn getRect( Slide.slide ).bottom - getRect( Elements.list ).top + this.gap;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\n\t\t/**\n\t\t * Return the slide width in px.\n\t\t *\n\t\t * @return {number} - The slide width.\n\t\t */\n\t\tslideWidth() {\n\t\t\treturn toPixel( root, options.fixedWidth || this.width );\n\t\t},\n\n\t\t/**\n\t\t * Return the slide height in px.\n\t\t *\n\t\t * @param {number} index - Slide index.\n\t\t *\n\t\t * @return {number} - The slide height.\n\t\t */\n\t\tslideHeight( index ) {\n\t\t\tif ( options.autoHeight ) {\n\t\t\t\tconst Slide = Elements.getSlide( index );\n\t\t\t\treturn Slide ? Slide.slide.offsetHeight : 0;\n\t\t\t}\n\n\t\t\tconst height = options.fixedHeight || ( this.height + this.gap ) / options.perPage - this.gap;\n\t\t\treturn toPixel( root, height );\n\t\t},\n\n\t\t/**\n\t\t * Return slider width without padding.\n\t\t *\n\t\t * @return {number} - Current slider width.\n\t\t */\n\t\tget width() {\n\t\t\treturn track.clientWidth;\n\t\t},\n\n\t\t/**\n\t\t * Return slide height without padding.\n\t\t *\n\t\t * @return {number} - Slider height.\n\t\t */\n\t\tget height() {\n\t\t\tconst height = options.height || this.width * options.heightRatio;\n\t\t\texist( height, '\"height\" or \"heightRatio\" is missing.' );\n\t\t\treturn toPixel( root, height ) - this.padding.top - this.padding.bottom;\n\t\t},\n\t}\n}","/**\n * A package of utility functions related with time.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Simple throttle function that controls how often the given function is executed.\n *\n * @param {function} func - A function to be throttled.\n * @param {number}   wait - Time in millisecond for interval of execution.\n *\n * @return {Function} - A debounced function.\n */\nexport function throttle( func, wait ) {\n\tlet timeout;\n\n\t// Declare function by the \"function\" keyword to prevent \"this\" from being inherited.\n\treturn function () {\n\t\tif ( ! timeout ) {\n\t\t\ttimeout = setTimeout( () => {\n\t\t\t\tfunc();\n\t\t\t\ttimeout = null;\n\t\t\t}, wait );\n\t\t}\n\t}\n}\n\n/**\n * Custom setInterval function that provides progress rate as callback.\n *\n * @param {function} callback - A callback function fired every time the interval time passes.\n * @param {number}   interval - Interval duration in milliseconds.\n * @param {function} progress - A callback function fired whenever the progress goes.\n *\n * @return {Object} - An object containing play() and pause() functions.\n */\nexport function createInterval( callback, interval, progress ) {\n\tconst { requestAnimationFrame } = window;\n\tlet start, elapse, rate, pause = true;\n\n\tconst step = timestamp => {\n\t\tif ( ! pause ) {\n\t\t\tif ( ! start ) {\n\t\t\t\tstart = timestamp;\n\n\t\t\t\tif ( rate && rate < 1 ) {\n\t\t\t\t\tstart -= rate * interval;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telapse = timestamp - start;\n\t\t\trate   = elapse / interval;\n\n\t\t\tif ( elapse >= interval ) {\n\t\t\t\tstart = 0;\n\t\t\t\trate  = 1;\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\tif ( progress ) {\n\t\t\t\tprogress( rate );\n\t\t\t}\n\n\t\t\trequestAnimationFrame( step );\n\t\t}\n\t};\n\n\treturn {\n\t\tpause() {\n\t\t\tpause = true;\n\t\t\tstart = 0;\n\t\t},\n\n\t\tplay( reset ) {\n\t\t\tstart = 0;\n\n\t\t\tif ( reset ) {\n\t\t\t\trate = 0;\n\t\t\t}\n\n\t\t\tif ( pause ) {\n\t\t\t\tpause = false;\n\t\t\t\trequestAnimationFrame( step );\n\t\t\t}\n\t\t},\n\t};\n}","/**\n * The component for handing slide layouts and their sizes.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport Horizontal from './directions/horizontal';\nimport Vertical from './directions/vertical';\n\nimport { unit } from '../../utils/utils';\nimport { throttle } from '../../utils/time';\nimport { applyStyle, removeAttribute } from '../../utils/dom';\nimport { assign } from \"../../utils/object\";\nimport { TTB } from \"../../constants/directions\";\n\n\n/**\n * The component for handing slide layouts and their sizes.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Keep the Elements component.\n\t *\n\t * @type {string}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Whether the slider is vertical or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isVertical = Splide.options.direction === TTB;\n\n\t/**\n\t * Layout component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Layout = assign( {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tbind();\n\t\t\tinit();\n\n\t\t\t// The word \"size\" means width for a horizontal slider and height for a vertical slider.\n\t\t\tthis.totalSize = isVertical ? this.totalHeight : this.totalWidth;\n\t\t\tthis.slideSize = isVertical ? this.slideHeight : this.slideWidth;\n\t\t},\n\n\t\t/**\n\t\t * Destroy the component.\n\t\t */\n\t\tdestroy() {\n\t\t\tremoveAttribute( [ Elements.list, Elements.track ], 'style' );\n\t\t},\n\n\t\t/**\n\t\t * Return the slider height on the vertical mode or width on the horizontal mode.\n\t\t *\n\t\t * @return {number}\n\t\t */\n\t\tget size() {\n\t\t\treturn isVertical ? this.height : this.width;\n\t\t},\n\t}, isVertical ?\tVertical( Splide, Components ) : Horizontal( Splide, Components ) );\n\n\t/**\n\t * Init slider styles according to options.\n\t */\n\tfunction init() {\n\t\tLayout.init();\n\n\t\tapplyStyle( Splide.root, { maxWidth: unit( Splide.options.width ) } );\n\t\tElements.each( Slide => { Slide.slide.style[ Layout.margin ] = unit( Layout.gap ) } );\n\n\t\tresize();\n\t}\n\n\t/**\n\t * Listen the resize native event with throttle.\n\t * Initialize when the component is mounted or options are updated.\n\t */\n\tfunction bind() {\n\t\tSplide\n\t\t\t.on( 'resize load', throttle( () => { Splide.emit( 'resize' ) }, Splide.options.throttle ), window )\n\t\t\t.on( 'resize', resize )\n\t\t\t.on( 'updated refresh', init );\n\t}\n\n\t/**\n\t * Resize the track and slide elements.\n\t */\n\tfunction resize() {\n\t\tconst options = Splide.options;\n\n\t\tLayout.resize();\n\n\t\tapplyStyle( Elements.track, { height: unit( Layout.height ) } );\n\n\t\tconst slideHeight = options.autoHeight ? null : unit( Layout.slideHeight() );\n\n\t\tElements.each( Slide => {\n\t\t\tapplyStyle( Slide.container, { height: slideHeight } );\n\n\t\t\tapplyStyle( Slide.slide, {\n\t\t\t\twidth : options.autoWidth ? null : unit( Layout.slideWidth( Slide.index ) ),\n\t\t\t\theight: Slide.container ? null : slideHeight,\n\t\t\t} );\n\t\t} );\n\n\t\tSplide.emit( 'resized' );\n\t}\n\n\treturn Layout;\n}","/**\n * The component for supporting mouse drag and swipe.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { FADE, SLIDE } from '../../constants/types';\nimport { TTB } from '../../constants/directions';\nimport { MOVING } from '../../constants/states';\nimport { between } from '../../utils/utils';\nimport { each } from \"../../utils/object\";\n\nconst { abs } = Math;\n\n/**\n * If the absolute velocity is greater thant this value,\n * a slider always goes to a different slide after drag, not allowed to stay on a current slide.\n */\nconst MIN_VELOCITY = 0.1;\n\n/**\n * Adjust how much the track can be pulled on the first or last page.\n * The larger number this is, the farther the track moves.\n * This should be around 5 - 9.\n *\n * @type {number}\n */\nconst FRICTION_REDUCER = 7;\n\n\n/**\n * The component supporting mouse drag and swipe.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Store the Move component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Track = Components.Track;\n\n\t/**\n\t * Store the Controller component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Controller = Components.Controller;\n\n\t/**\n\t * Coordinate of the track on starting drag.\n\t *\n\t * @type {Object}\n\t */\n\tlet startCoord;\n\n\t/**\n\t * Analyzed info on starting drag.\n\t *\n\t * @type {Object|null}\n\t */\n\tlet startInfo;\n\n\t/**\n\t * Analyzed info being updated while dragging/swiping.\n\t *\n\t * @type {Object}\n\t */\n\tlet currentInfo;\n\n\t/**\n\t * Determine whether slides are being dragged or not.\n\t *\n\t * @type {boolean}\n\t */\n\tlet isDragging;\n\n\t/**\n\t * Whether the slider direction is vertical or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isVertical = Splide.options.direction === TTB;\n\n\t/**\n\t * Axis for the direction.\n\t *\n\t * @type {string}\n\t */\n\tconst axis = isVertical ? 'y' : 'x';\n\n\t/**\n\t * Drag component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Drag = {\n\t\t/**\n\t\t * Whether dragging is disabled or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tdisabled: false,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tconst Elements = Components.Elements;\n\t\t\tconst track    = Elements.track;\n\n\t\t\tSplide\n\t\t\t\t.on( 'touchstart mousedown', start, track )\n\t\t\t\t.on( 'touchmove mousemove', move, track, { passive: false } )\n\t\t\t\t.on( 'touchend touchcancel mouseleave mouseup dragend', end, track )\n\t\t\t\t.on( 'mounted refresh', () => {\n\t\t\t\t\t// Prevent dragging an image or anchor itself.\n\t\t\t\t\teach( Elements.list.querySelectorAll( 'img, a' ), elm => {\n\t\t\t\t\t\tSplide\n\t\t\t\t\t\t\t.off( 'dragstart', elm )\n\t\t\t\t\t\t\t.on( 'dragstart', e => { e.preventDefault() }, elm, { passive: false } );\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.on( 'mounted updated', () => {\n\t\t\t\t\tthis.disabled = ! Splide.options.drag;\n\t\t\t\t} );\n\t\t},\n\t};\n\n\t/**\n\t * Called when the track starts to be dragged.\n\t *\n\t * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n\t */\n\tfunction start( e ) {\n\t\tif ( ! Drag.disabled && ! isDragging ) {\n\t\t\t// These prams are used to evaluate whether the slider should start moving.\n\t\t\tinit( e );\n\t\t}\n\t}\n\n\t/**\n\t * Initialize parameters.\n\t *\n\t * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n\t */\n\tfunction init( e ) {\n\t\tstartCoord  = Track.toCoord( Track.position );\n\t\tstartInfo   = analyze( e, {} );\n\t\tcurrentInfo = startInfo;\n\t}\n\n\t/**\n\t * Called while the track being dragged.\n\t *\n\t * @param {TouchEvent|MouseEvent} e - TouchEvent or MouseEvent object.\n\t */\n\tfunction move( e ) {\n\t\tif ( startInfo ) {\n\t\t\tcurrentInfo = analyze( e, startInfo );\n\n\t\t\tif ( isDragging ) {\n\t\t\t\tif ( e.cancelable ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tif ( ! Splide.is( FADE ) ) {\n\t\t\t\t\tconst position = startCoord[ axis ] + currentInfo.offset[ axis ];\n\t\t\t\t\tTrack.translate( resist( position ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( shouldMove( currentInfo ) ) {\n\t\t\t\t\tSplide.emit( 'drag', startInfo );\n\t\t\t\t\tisDragging = true;\n\t\t\t\t\tTrack.cancel();\n\n\t\t\t\t\t// These params are actual drag data.\n\t\t\t\t\tinit( e );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Determine whether to start moving the track or not by drag angle.\n\t *\n\t * @param {Object} info - An information object.\n\t *\n\t * @return {boolean} - True if the track should be moved or false if not.\n\t */\n\tfunction shouldMove( { offset } ) {\n\t\tif ( Splide.State.is( MOVING ) && Splide.options.waitForTransition ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet angle = Math.atan( abs( offset.y ) / abs( offset.x ) ) * 180 / Math.PI;\n\n\t\tif ( isVertical ) {\n\t\t\tangle = 90 - angle;\n\t\t}\n\n\t\treturn angle < Splide.options.dragAngleThreshold;\n\t}\n\n\t/**\n\t * Resist dragging the track on the first/last page because there is no more.\n\t *\n\t * @param {number} position - A position being applied to the track.\n\t *\n\t * @return {Object} - Adjusted position.\n\t */\n\tfunction resist( position ) {\n\t\tif ( Splide.is( SLIDE ) ) {\n\t\t\tconst sign  = Track.sign;\n\t\t\tconst start = sign * Track.trim( Track.toPosition( 0 ) );\n\t\t\tconst end   = sign * Track.trim( Track.toPosition( Controller.edgeIndex ) );\n\n\t\t\tposition *= sign;\n\n\t\t\tif ( position < start ) {\n\t\t\t\tposition = start - FRICTION_REDUCER * Math.log( start - position );\n\t\t\t}\telse if ( position > end ) {\n\t\t\t\tposition = end + FRICTION_REDUCER * Math.log( position - end );\n\t\t\t}\n\n\t\t\tposition *= sign;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Called when dragging ends.\n\t */\n\tfunction end() {\n\t\tstartInfo = null;\n\n\t\tif ( isDragging ) {\n\t\t\tSplide.emit( 'dragged', currentInfo );\n\t\t\tgo( currentInfo );\n\t\t\tisDragging = false;\n\t\t}\n\t}\n\n\t/**\n\t * Go to the slide determined by the analyzed data.\n\t *\n\t * @param {Object} info - An info object.\n\t */\n\tfunction go( info ) {\n\t\tconst velocity = info.velocity[ axis ];\n\t\tconst absV     = abs( velocity );\n\n\t\tif ( absV > 0 ) {\n\t\t\tconst options = Splide.options;\n\t\t\tconst index   = Splide.index;\n\t\t\tconst sign    = velocity < 0 ? -1 : 1;\n\n\t\t\tlet destIndex = index;\n\n\t\t\tif ( ! Splide.is( FADE ) ) {\n\t\t\t\tlet destination = Track.position;\n\n\t\t\t\tif ( absV > options.flickVelocityThreshold && abs( info.offset[ axis ] ) < options.swipeDistanceThreshold ) {\n\t\t\t\t\tdestination += sign * Math.min(\n\t\t\t\t\t\tabsV * options.flickPower,\n\t\t\t\t\t\tComponents.Layout.size * ( options.flickMaxPages || 1 )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tdestIndex = Track.toIndex( destination );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Do not allow the track to go to a previous position if there is enough velocity.\n\t\t\t * Always use the adjacent index for the fade mode.\n\t\t\t */\n\t\t\tif ( destIndex === index && absV > MIN_VELOCITY ) {\n\t\t\t\tdestIndex = index + sign * Track.sign;\n\t\t\t}\n\n\t\t\tif ( Splide.is( SLIDE ) ) {\n\t\t\t\tdestIndex = between( destIndex, 0, Controller.edgeIndex );\n\t\t\t}\n\n\t\t\tController.go( destIndex, options.isNavigation );\n\t\t}\n\t}\n\n\t/**\n\t * Analyze the given event object and return important information for handling swipe behavior.\n\t *\n\t * @param {Event}   e          - Touch or Mouse event object.\n\t * @param {Object}  startInfo  - Information analyzed on start for calculating difference from the current one.\n\t *\n\t * @return {Object} - An object containing analyzed information, such as offset, velocity, etc.\n\t */\n\tfunction analyze( e, startInfo ) {\n\t\tconst { timeStamp, touches } = e;\n\t\tconst { clientX, clientY } = touches ? touches[0] : e;\n\t\tconst { x: fromX = clientX, y: fromY = clientY } = startInfo.to || {};\n\n\t\tconst startTime = startInfo.time || 0;\n\t\tconst offset    = { x: clientX - fromX, y: clientY - fromY };\n\t\tconst duration  = timeStamp - startTime;\n\t\tconst velocity  = { x: offset.x / duration, y: offset.y / duration };\n\n\t\treturn {\n\t\t\tto: { x: clientX, y: clientY },\n\t\t\toffset,\n\t\t\ttime: timeStamp,\n\t\t\tvelocity,\n\t\t};\n\t}\n\n\treturn Drag;\n}","/**\n * The component for handling a click event.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * The component for handling a click event.\n * Click should be disabled during drag/swipe.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default (Splide, Components) => {\n\t/**\n\t * Whether click is disabled or not.\n\t *\n\t * @type {boolean}\n\t */\n\tlet disabled = false;\n\n\t/**\n\t * Click component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Click = {\n\t\t/**\n\t\t * Mount only when the drag is activated and the slide type is not \"fade\".\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: Splide.options.drag,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tSplide.on(\"click\", onClick, Components.Elements.track, { capture: true })\n\t\t\t\t.on(\"drag\", () => {\n\t\t\t\t\tdisabled = true;\n\t\t\t\t})\n\t\t\t\t.on(\"dragged\", () => {\n\t\t\t\t\t// Make sure the flag is released after the click event is fired.\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdisabled = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t};\n\n\t/**\n\t * Called when a track element is clicked.\n\t *\n\t * @param {Event} e - A click event.\n\t */\n\tfunction onClick(e) {\n\t\tif (disabled) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\t}\n\n\treturn Click;\n};\n","/**\n * The component for playing slides automatically.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle } from '../../utils/dom';\nimport { createInterval } from '../../utils/time';\n\n/**\n * Set of pause flags.\n */\nconst PAUSE_FLAGS = {\n\tHOVER : 1,\n\tFOCUS : 2,\n\tMANUAL: 3,\n};\n\n\n/**\n * The component for playing slides automatically.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n * @param {string} name       - A component name as a lowercase string.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components, name ) => {\n\t/**\n\t * Store pause flags.\n\t *\n\t * @type {Array}\n\t */\n\tlet flags = [];\n\n\t/**\n\t * Store an interval object.\n\t *\n\t * @type {Object};\n\t */\n\tlet interval;\n\n\t/**\n\t * Keep the Elements component.\n\t *\n\t * @type {string}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Autoplay component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Autoplay = {\n\t\t/**\n\t\t * Required only when the autoplay option is true.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: Splide.options.autoplay,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t * Note that autoplay starts only if there are slides over perPage number.\n\t\t */\n\t\tmount() {\n\t\t\tconst options = Splide.options;\n\n\t\t\tif ( Elements.slides.length > options.perPage ) {\n\t\t\t\tinterval = createInterval( () => { Splide.go( '>' ) }, options.interval, rate => {\n\t\t\t\t\tSplide.emit( `${ name }:playing`, rate );\n\n\t\t\t\t\tif ( Elements.bar ) {\n\t\t\t\t\t\tapplyStyle( Elements.bar, { width: `${ rate * 100 }%` } );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tbind();\n\t\t\t\tthis.play();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Start autoplay.\n\t\t *\n\t\t * @param {number} flag - A pause flag to be removed.\n\t\t */\n\t\tplay( flag = 0 ) {\n\t\t\tflags = flags.filter( f => f !== flag );\n\n\t\t\tif ( ! flags.length ) {\n\t\t\t\tSplide.emit( `${ name }:play` );\n\t\t\t\tinterval.play( Splide.options.resetProgress );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pause autoplay.\n\t\t * Note that Array.includes is not supported by IE.\n\t\t *\n\t\t * @param {number} flag - A pause flag to be added.\n\t\t */\n\t\tpause( flag = 0 ) {\n\t\t\tinterval.pause();\n\n\t\t\tif ( flags.indexOf( flag ) === -1 ) {\n\t\t\t\tflags.push( flag );\n\t\t\t}\n\n\t\t\tif ( flags.length === 1 ) {\n\t\t\t\tSplide.emit( `${ name }:pause` );\n\t\t\t}\n\t\t},\n\t};\n\n\t/**\n\t * Listen some events.\n\t */\n\tfunction bind() {\n\t\tconst options = Splide.options;\n\t\tconst sibling = Splide.sibling;\n\t\tconst elms    = [ Splide.root, sibling ? sibling.root : null ];\n\n\t\tif ( options.pauseOnHover ) {\n\t\t\tswitchOn( elms, 'mouseleave', PAUSE_FLAGS.HOVER, true );\n\t\t\tswitchOn( elms, 'mouseenter', PAUSE_FLAGS.HOVER, false );\n\t\t}\n\n\t\tif ( options.pauseOnFocus ) {\n\t\t\tswitchOn( elms, 'focusout', PAUSE_FLAGS.FOCUS, true );\n\t\t\tswitchOn( elms, 'focusin', PAUSE_FLAGS.FOCUS, false );\n\t\t}\n\n\t\tif ( Elements.play ) {\n\t\t\tSplide.on( 'click', () => {\n\t\t\t\t// Need to be removed a focus flag at first.\n\t\t\t\tAutoplay.play( PAUSE_FLAGS.FOCUS );\n\t\t\t\tAutoplay.play( PAUSE_FLAGS.MANUAL );\n\t\t\t}, Elements.play );\n\t\t}\n\n\t\tif ( Elements.pause ) {\n\t\t\tswitchOn( [ Elements.pause ], 'click', PAUSE_FLAGS.MANUAL, false );\n\t\t}\n\n\t\tSplide\n\t\t\t.on( 'move refresh', () => { Autoplay.play() } ) // Rewind the timer.\n\t\t\t.on( 'destroy', () => {\tAutoplay.pause() } );\n\t}\n\n\t/**\n\t * Play or pause on the given event.\n\t *\n\t * @param {Element[]} elms  - Elements.\n\t * @param {string}    event - An event name or names.\n\t * @param {number}    flag  - A pause flag defined on the top.\n\t * @param {boolean}   play  - Determine whether to play or pause.\n\t */\n\tfunction switchOn( elms, event, flag, play ) {\n\t\telms.forEach( elm => {\n\t\t\tSplide.on( event, () => { Autoplay[ play ? 'play' : 'pause' ]( flag ) }, elm );\n\t\t} );\n\t}\n\n\treturn Autoplay;\n}","/**\n * The component for change an img element to background image of its wrapper.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { applyStyle, child } from '../../utils/dom';\n\n\n/**\n * The component for change an img element to background image of its wrapper.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Hold options.\n\t *\n\t * @type {Object}\n\t */\n\tconst options = Splide.options;\n\n\t/**\n\t * Cover component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Cover = {\n\t\t/**\n\t\t * Required only when \"cover\" option is true.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: options.cover,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tSplide.on( 'lazyload:loaded', img => { cover( img, false ) } );\n\t\t\tSplide.on( 'mounted updated refresh', () => apply( false ) );\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tapply( true );\n\t\t},\n\t};\n\n\t/**\n\t * Apply \"cover\" to all slides.\n\t *\n\t * @param {boolean} uncover - If true, \"cover\" will be clear.\n\t */\n\tfunction apply( uncover ) {\n\t\tComponents.Elements.each( Slide => {\n\t\t\tconst img = child( Slide.slide, 'IMG' ) || child( Slide.container, 'IMG' );\n\n\t\t\tif ( img && img.src ) {\n\t\t\t\tcover( img, uncover );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Set background image of the parent element, using source of the given image element.\n\t *\n\t * @param {Element} img     - An image element.\n\t * @param {boolean} uncover - Reset \"cover\".\n\t */\n\tfunction cover( img, uncover ) {\n\t\tapplyStyle( img.parentElement, { background: uncover ? '' : `center/cover no-repeat url(\"${ img.src }\")` } );\n\t\tapplyStyle( img, { display: uncover ? '' : 'none' } );\n\t}\n\n\treturn Cover;\n}","/**\n * Export vector path for an arrow.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Namespace definition for SVG element.\n *\n * @type {string}\n */\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n\n/**\n * The arrow vector path.\n *\n * @type {number}\n */\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n\n/**\n * SVG width and height.\n *\n * @type {number}\n */\nexport const SIZE = 40;","/**\n * The component for appending prev/next arrows.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { create, append, before, domify, remove, removeAttribute } from '../../utils/dom';\nimport { XML_NAME_SPACE, PATH, SIZE } from './path';\nimport { LOOP } from \"../../constants/types\";\n\n\n/**\n * The component for appending prev/next arrows.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n * @param {string} name       - A component name as a lowercase string.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components, name ) => {\n\t/**\n\t * Previous arrow element.\n\t *\n\t * @type {Element|undefined}\n\t */\n\tlet prev;\n\n\t/**\n\t * Next arrow element.\n\t *\n\t * @type {Element|undefined}\n\t */\n\tlet next;\n\n\t/**\n\t * Store the class list.\n\t *\n\t * @type {Object}\n\t */\n\tconst classes = Splide.classes;\n\n\t/**\n\t * Hold the root element.\n\t *\n\t * @type {Element}\n\t */\n\tconst root = Splide.root;\n\n\t/**\n\t * Whether arrows are created programmatically or not.\n\t *\n\t * @type {boolean}\n\t */\n\tlet created;\n\n\t/**\n\t * Hold the Elements component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Arrows component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Arrows = {\n\t\t/**\n\t\t * Required when the arrows option is true.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: Splide.options.arrows,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\t// Attempt to get arrows from HTML source.\n\t\t\tprev = Elements.arrows.prev;\n\t\t\tnext = Elements.arrows.next;\n\n\t\t\t// If arrows were not found in HTML, let's generate them.\n\t\t\tif ( ( ! prev || ! next ) && Splide.options.arrows ) {\n\t\t\t\tprev = createArrow( true );\n\t\t\t\tnext = createArrow( false );\n\t\t\t\tcreated = true;\n\n\t\t\t\tappendArrows();\n\t\t\t}\n\n\t\t\tif ( prev && next ) {\n\t\t\t\tbind();\n\t\t\t}\n\n\t\t\tthis.arrows = { prev, next };\n\t\t},\n\n\t\t/**\n\t\t * Called after all components are mounted.\n\t\t */\n\t\tmounted() {\n\t\t\tSplide.emit( `${ name }:mounted`, prev, next );\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tremoveAttribute( [ prev, next ], 'disabled' );\n\n\t\t\tif ( created ) {\n\t\t\t\tremove( prev.parentElement );\n\t\t\t}\n\t\t},\n\t};\n\n\t/**\n\t * Listen to native and custom events.\n\t */\n\tfunction bind() {\n\t\tSplide\n\t\t\t.on( 'click', () => { Splide.go( '<' ) }, prev )\n\t\t\t.on( 'click', () => { Splide.go( '>' ) }, next )\n\t\t\t.on( 'mounted move updated refresh', updateDisabled );\n\t}\n\n\t/**\n\t * Update a disabled attribute.\n\t */\n\tfunction updateDisabled() {\n\t\tconst { prevIndex, nextIndex } = Components.Controller;\n\t\tconst isEnough = Splide.length > Splide.options.perPage || Splide.is( LOOP );\n\n\t\tprev.disabled = prevIndex < 0 || ! isEnough;\n\t\tnext.disabled = nextIndex < 0 || ! isEnough;\n\n\t\tSplide.emit( `${ name }:updated`, prev, next, prevIndex, nextIndex );\n\t}\n\n\t/**\n\t * Create a wrapper element and append arrows.\n\t */\n\tfunction appendArrows() {\n\t\tconst wrapper = create( 'div', { class: classes.arrows } );\n\n\t\tappend( wrapper, prev );\n\t\tappend( wrapper, next );\n\n\t\tconst slider = Elements.slider;\n\t\tconst parent = Splide.options.arrows === 'slider' && slider ? slider : root;\n\n\t\tbefore( wrapper, parent.firstElementChild );\n\t}\n\n\t/**\n\t * Create an arrow element.\n\t *\n\t * @param {boolean} prev - Determine to create a prev arrow or next arrow.\n\t *\n\t * @return {Element} - A created arrow element.\n\t */\n\tfunction createArrow( prev ) {\n\t\tconst arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\n\t\t\t+\t`<svg xmlns=\"${ XML_NAME_SPACE }\"\tviewBox=\"0 0 ${ SIZE } ${ SIZE }\"\twidth=\"${ SIZE }\"\theight=\"${ SIZE }\">`\n\t\t\t+ `<path d=\"${ Splide.options.arrowPath || PATH }\" />`;\n\n\t\treturn domify( arrow );\n\t}\n\n\treturn Arrows;\n}","/**\n * The component for handling pagination\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { create, remove, append, addClass, removeClass } from '../../utils/dom';\nimport { STATUS_CLASSES } from '../../constants/classes';\n\n/**\n * The event name for updating some attributes of pagination nodes.\n *\n * @type {string}\n */\nconst ATTRIBUTES_UPDATE_EVENT = 'move.page';\n\n/**\n * The event name for recreating pagination.\n *\n * @type {string}\n */\nconst UPDATE_EVENT = 'updated.page refresh.page';\n\n\n/**\n * The component for handling pagination\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n * @param {string} name       - A component name as a lowercase string.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components, name ) => {\n\t/**\n\t * Store all data for pagination.\n\t * - list: A list element.\n\t * - items: An array that contains objects(li, button, index, page).\n\t *\n\t * @type {Object}\n\t */\n\tlet data = {};\n\n\t/**\n\t * Hold the Elements component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * Pagination component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Pagination = {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tconst pagination = Splide.options.pagination;\n\n\t\t\tif ( pagination ) {\n\t\t\t\tdata = createPagination();\n\n\t\t\t\tconst slider = Elements.slider;\n\t\t\t\tconst parent = pagination === 'slider' && slider ? slider : Splide.root;\n\t\t\t\tappend( parent, data.list );\n\n\t\t\t\tSplide.on( ATTRIBUTES_UPDATE_EVENT, updateAttributes );\n\t\t\t}\n\n\t\t\tSplide\n\t\t\t\t.off( UPDATE_EVENT )\n\t\t\t\t.on( UPDATE_EVENT, () => {\n\t\t\t\t\tPagination.destroy();\n\n\t\t\t\t\tif ( Splide.options.pagination ) {\n\t\t\t\t\t\tPagination.mount();\n\t\t\t\t\t\tPagination.mounted();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Called after all components are mounted.\n\t\t */\n\t\tmounted() {\n\t\t\tif ( Splide.options.pagination ) {\n\t\t\t\tconst index = Splide.index;\n\t\t\t\tSplide.emit( `${ name }:mounted`, data, this.getItem( index ) );\n\t\t\t\tupdateAttributes( index, -1 );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Destroy the pagination.\n\t\t * Be aware that node.remove() is not supported by IE.\n\t\t */\n\t\tdestroy() {\n\t\t\tremove( data.list );\n\n\t\t\tif ( data.items ) {\n\t\t\t\tdata.items.forEach( item => { Splide.off( 'click', item.button ) } );\n\t\t\t}\n\n\t\t\t// Do not remove UPDATE_EVENT to recreate pagination if needed.\n\t\t\tSplide.off( ATTRIBUTES_UPDATE_EVENT );\n\n\t\t\tdata = {};\n\t\t},\n\n\t\t/**\n\t\t * Return an item by index.\n\t\t *\n\t\t * @param {number} index - A slide index.\n\t\t *\n\t\t * @return {Object|undefined} - An item object on success or undefined on failure.\n\t\t */\n\t\tgetItem( index ) {\n\t\t\treturn data.items[ Components.Controller.toPage( index ) ];\n\t\t},\n\n\t\t/**\n\t\t * Return object containing pagination data.\n\t\t *\n\t\t * @return {Object} - Pagination data including list and items.\n\t\t */\n\t\tget data() {\n\t\t\treturn data;\n\t\t},\n\t};\n\n\t/**\n\t * Update attributes.\n\t *\n\t * @param {number} index     - Active index.\n\t * @param {number} prevIndex - Prev index.\n\t */\n\tfunction updateAttributes( index, prevIndex ) {\n\t\tconst prev   = Pagination.getItem( prevIndex );\n\t\tconst curr   = Pagination.getItem( index );\n\t\tconst active = STATUS_CLASSES.active;\n\n\t\tif ( prev ) {\n\t\t\tremoveClass( prev.button, active );\n\t\t}\n\n\t\tif ( curr ) {\n\t\t\taddClass( curr.button, active );\n\t\t}\n\n\t\tSplide.emit( `${ name }:updated`, data, prev, curr );\n\t}\n\n\t/**\n\t * Create a wrapper and button elements.\n\t *\n\t * @return {Object} - An object contains all data.\n\t */\n\tfunction createPagination() {\n\t\tconst options  = Splide.options;\n\t\tconst classes  = Splide.classes;\n\t\tconst list     = create( 'ul', { class: classes.pagination } );\n\n\t\tconst items = Elements.getSlides( false )\n\t\t\t.filter( Slide => options.focus !== false || Slide.index % options.perPage === 0 )\n\t\t\t.map( ( Slide, page ) => {\n\t\t\t\tconst li     = create( 'li', {} );\n\t\t\t\tconst button = create( 'button', { class: classes.page, type: 'button' } );\n\n\t\t\t\tappend( li, button );\n\t\t\t\tappend( list, li );\n\n\t\t\t\tSplide.on( 'click', () => { Splide.go( `>${ page }` ) }, button );\n\n\t\t\t\treturn { li, button, page, Slides: Elements.getSlidesByPage( page ) };\n\t\t\t} );\n\n\t\treturn { list, items };\n\t}\n\n\treturn Pagination;\n}","/**\n * The component for loading slider images lazily.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { STATUS_CLASSES } from '../../constants/classes';\nimport {\n\tcreate,\n\tremove,\n\tappend,\n\taddClass,\n\tremoveClass,\n\tsetAttribute,\n\tgetAttribute,\n\tapplyStyle,\n} from '../../utils/dom';\nimport { each } from \"../../utils/object\";\n\n/**\n * The name for a data attribute of src.\n *\n * @type {string}\n */\nconst SRC_DATA_NAME = 'data-splide-lazy';\n\n/**\n * The name for a data attribute of srcset.\n *\n * @type {string}\n */\nconst SRCSET_DATA_NAME = 'data-splide-lazy-srcset';\n\n/**\n * The component for loading slider images lazily.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n * @param {string} name       - A component name as a lowercase string.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components, name ) => {\n\t/**\n\t * Next index for sequential loading.\n\t *\n\t * @type {number}\n\t */\n\tlet nextIndex;\n\n\t/**\n\t * Store objects containing an img element and a Slide object.\n\t *\n\t * @type {Object[]}\n\t */\n\tlet images;\n\n\t/**\n\t * Store the options.\n\t *\n\t * @type {Object}\n\t */\n\tconst options = Splide.options;\n\n\t/**\n\t * Whether to load images sequentially or not.\n\t *\n\t * @type {boolean}\n\t */\n\tconst isSequential = options.lazyLoad === 'sequential';\n\n\t/**\n\t * Lazyload component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Lazyload = {\n\t\t/**\n\t\t * Mount only when the lazyload option is provided.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: options.lazyLoad,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tSplide.on( 'mounted refresh', () => {\n\t\t\t\tinit();\n\n\t\t\t\tComponents.Elements.each( Slide => {\n\t\t\t\t\teach( Slide.slide.querySelectorAll( `[${ SRC_DATA_NAME }], [${ SRCSET_DATA_NAME }]` ), img => {\n\t\t\t\t\t\tif ( ! img.src && ! img.srcset ) {\n\t\t\t\t\t\t\timages.push( { img, Slide } );\n\t\t\t\t\t\t\tapplyStyle( img, { display: 'none' } );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t\tif ( isSequential ) {\n\t\t\t\t\tloadNext();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( ! isSequential ) {\n\t\t\t\tSplide.on( `mounted refresh moved.${ name }`, check );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy: init,\n\t};\n\n\t/**\n\t * Initialize parameters.\n\t */\n\tfunction init() {\n\t\timages    = [];\n\t\tnextIndex = 0;\n\t}\n\n\t/**\n\t * Check how close each image is from the active slide and\n\t * determine whether to start loading or not, according to the distance.\n\t *\n\t * @param {number} index - Current index.\n\t */\n\tfunction check( index ) {\n\t\tindex = isNaN( index ) ? Splide.index : index;\n\n\t\timages = images.filter( image => {\n\t\t\tif ( image.Slide.isWithin( index, options.perPage * ( options.preloadPages + 1 ) ) ) {\n\t\t\t\tload( image.img, image.Slide );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} );\n\n\t\t// Unbind if all images are loaded.\n\t\tif ( ! images[0] ) {\n\t\t\tSplide.off( `moved.${ name }` );\n\t\t}\n\t}\n\n\t/**\n\t * Start loading an image.\n\t * Creating a clone of the image element since setting src attribute directly to it\n\t * often occurs 'hitch', blocking some other processes of a browser.\n\t *\n\t * @param {Element} img   - An image element.\n\t * @param {Object}  Slide - A Slide object.\n\t */\n\tfunction load( img, Slide ) {\n\t\taddClass( Slide.slide, STATUS_CLASSES.loading );\n\n\t\tconst spinner = create( 'span', { class: Splide.classes.spinner } );\n\t\tappend( img.parentElement, spinner );\n\n\t\timg.onload  = () => { loaded( img, spinner, Slide, false ) };\n\t\timg.onerror = () => { loaded( img, spinner, Slide, true ) };\n\n\t\tsetAttribute( img, 'srcset', getAttribute( img, SRCSET_DATA_NAME ) || '' );\n\t\tsetAttribute( img, 'src', getAttribute( img, SRC_DATA_NAME ) || '' );\n\t}\n\n\t/**\n\t * Start loading a next image in images array.\n\t */\n\tfunction loadNext() {\n\t\tif ( nextIndex < images.length ) {\n\t\t\tconst image = images[ nextIndex ];\n\t\t\tload( image.img, image.Slide );\n\t\t}\n\n\t\tnextIndex++;\n\t}\n\n\t/**\n\t * Called just after the image was loaded or loading was aborted by some error.\n\t *\n\t * @param {Element} img     - An image element.\n\t * @param {Element} spinner - A spinner element.\n\t * @param {Object}  Slide   - A Slide object.\n\t * @param {boolean} error   - True if the image was loaded successfully or false on error.\n\t */\n\tfunction loaded( img, spinner, Slide, error ) {\n\t\tremoveClass( Slide.slide, STATUS_CLASSES.loading );\n\n\t\tif ( ! error ) {\n\t\t\tremove( spinner );\n\t\t\tapplyStyle( img, { display: '' } );\n\t\t\tSplide.emit( `${ name }:loaded`, img ).emit( 'resize' );\n\t\t}\n\n\t\tif ( isSequential ) {\n\t\t\tloadNext();\n\t\t}\n\t}\n\n\treturn Lazyload;\n}","/**\n * Export aria attribute names.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\n/**\n * Attribute name for aria-current.\n *\n * @type {string}\n */\nexport const ARIA_CURRENRT = 'aria-current';\n\n/**\n * Attribute name for aria-control.\n *\n * @type {string}\n */\nexport const ARIA_CONTROLS = 'aria-controls';\n\n/**\n * Attribute name for aria-control.\n *\n * @type {string}\n */\nexport const ARIA_LABEL = 'aria-label';\n\n/**\n * Attribute name for aria-labelledby.\n *\n * @type {string}\n */\nexport const ARIA_LABELLEDBY = 'aria-labelledby';\n\n/**\n * Attribute name for aria-hidden.\n *\n * @type {string}\n */\nexport const ARIA_HIDDEN = 'aria-hidden';\n\n/**\n * Attribute name for tab-index.\n *\n * @type {string}\n */\nexport const TAB_INDEX = 'tabindex';","/**\n * The component for controlling slides via keyboard.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { removeAttribute, setAttribute } from \"../../utils/dom\";\nimport { TAB_INDEX } from \"../../constants/a11y\";\n\n/**\n * Map a key to a slide control.\n *\n * @type {Object}\n */\nconst KEY_MAP = {\n\tltr: {\n\t\tArrowLeft: \"<\",\n\t\tArrowRight: \">\",\n\t\t// For IE.\n\t\tLeft: \"<\",\n\t\tRight: \">\",\n\t},\n\trtl: {\n\t\tArrowLeft: \">\",\n\t\tArrowRight: \"<\",\n\t\t// For IE.\n\t\tLeft: \">\",\n\t\tRight: \"<\",\n\t},\n\tttb: {\n\t\tArrowUp: \"<\",\n\t\tArrowDown: \">\",\n\t\t// For IE.\n\t\tUp: \"<\",\n\t\tDown: \">\",\n\t},\n};\n\n/**\n * The component for controlling slides via keyboard.\n *\n * @param {Splide} Splide - A Splide instance.\n *\n * @return {Object} - The component object.\n */\nexport default (Splide) => {\n\t/**\n\t * Hold the target element.\n\t *\n\t * @type {Element|Document|undefined}\n\t */\n\tlet target;\n\n\treturn {\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tSplide.on(\"mounted updated\", () => {\n\t\t\t\tconst options = Splide.options;\n\t\t\t\tconst root = Splide.root;\n\t\t\t\tconst map = KEY_MAP[options.direction];\n\t\t\t\tconst keyboard = options.keyboard;\n\n\t\t\t\tif (target) {\n\t\t\t\t\tSplide.off(\"keydown\", target);\n\t\t\t\t\tremoveAttribute(root, TAB_INDEX);\n\t\t\t\t}\n\n\t\t\t\tif (keyboard) {\n\t\t\t\t\tif (keyboard === \"focused\") {\n\t\t\t\t\t\ttarget = root;\n\t\t\t\t\t\tsetAttribute(root, TAB_INDEX, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget = document;\n\t\t\t\t\t}\n\n\t\t\t\t\tSplide.on(\n\t\t\t\t\t\t\"keydown\",\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tif (map[e.key]) {\n\t\t\t\t\t\t\t\tSplide.go(map[e.key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttarget\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n};\n","/**\n * The component for enhancing accessibility.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { setAttribute, removeAttribute } from '../../utils/dom';\nimport { sprintf } from '../../utils/utils';\nimport { ARIA_CONTROLS, ARIA_CURRENRT, ARIA_HIDDEN, ARIA_LABEL, TAB_INDEX } from '../../constants/a11y';\n\n\n/**\n * The component for enhancing accessibility.\n *\n * @param {Splide} Splide     - A Splide instance.\n * @param {Object} Components - An object containing components.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide, Components ) => {\n\t/**\n\t * Hold a i18n object.\n\t *\n\t * @type {Object}\n\t */\n\tconst i18n = Splide.i18n;\n\n\t/**\n\t * Hold the Elements component.\n\t *\n\t * @type {Object}\n\t */\n\tconst Elements = Components.Elements;\n\n\t/**\n\t * All attributes related with A11y.\n\t *\n\t * @type {string[]}\n\t */\n\tconst allAttributes = [ ARIA_HIDDEN, TAB_INDEX, ARIA_CONTROLS, ARIA_LABEL, ARIA_CURRENRT, 'role' ];\n\n\t/**\n\t * A11y component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst A11y = {\n\t\t/**\n\t\t * Required only when the accessibility option is true.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: Splide.options.accessibility,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tSplide\n\t\t\t\t.on( 'visible', Slide => { updateSlide( Slide.slide, true ) } )\n\t\t\t\t.on( 'hidden', Slide => { updateSlide( Slide.slide, false ) } )\n\t\t\t\t.on( 'arrows:mounted', initArrows )\n\t\t\t\t.on( 'arrows:updated', updateArrows )\n\t\t\t\t.on( 'pagination:mounted', initPagination )\n\t\t\t\t.on( 'pagination:updated', updatePagination )\n\t\t\t\t.on( 'refresh', () => { removeAttribute( Components.Clones.clones, allAttributes ) } );\n\n\t\t\tif ( Splide.options.isNavigation ) {\n\t\t\t\tSplide\n\t\t\t\t\t.on( 'navigation:mounted navigation:updated', initNavigation )\n\t\t\t\t\t.on( 'active', Slide => { updateNavigation( Slide, true ) } )\n\t\t\t\t\t.on( 'inactive', Slide => { updateNavigation( Slide, false ) } );\n\t\t\t}\n\n\t\t\tinitAutoplay();\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t */\n\t\tdestroy() {\n\t\t\tconst Arrows = Components.Arrows;\n\t\t\tconst arrows = Arrows ? Arrows.arrows : {};\n\n\t\t\tremoveAttribute(\n\t\t\t\tElements.slides.concat( [ arrows.prev, arrows.next, Elements.play, Elements.pause ] ),\n\t\t\t\tallAttributes\n\t\t\t);\n\t\t},\n\t};\n\n\t/**\n\t * Update slide attributes when it gets visible or hidden.\n\t *\n\t * @param {Element} slide   - A slide element.\n\t * @param {Boolean} visible - True when the slide gets visible, or false when hidden.\n\t */\n\tfunction updateSlide( slide, visible ) {\n\t\tsetAttribute( slide, ARIA_HIDDEN, ! visible );\n\n\t\tif ( Splide.options.slideFocus ) {\n\t\t\tsetAttribute( slide, TAB_INDEX, visible ? 0 : -1 );\n\t\t}\n\t}\n\n\t/**\n\t * Initialize arrows if they are available.\n\t * Append screen reader elements and add aria-controls attribute.\n\t *\n\t * @param {Element} prev - Previous arrow element.\n\t * @param {Element} next - Next arrow element.\n\t */\n\tfunction initArrows( prev, next ) {\n\t\tconst controls = Elements.track.id;\n\n\t\tsetAttribute( prev, ARIA_CONTROLS, controls );\n\t\tsetAttribute( next, ARIA_CONTROLS, controls );\n\t}\n\n\t/**\n\t * Update arrow attributes.\n\t *\n\t * @param {Element} prev      - Previous arrow element.\n\t * @param {Element} next      - Next arrow element.\n\t * @param {number}  prevIndex - Previous slide index or -1 when there is no precede slide.\n\t * @param {number}  nextIndex - Next slide index or -1 when there is no next slide.\n\t */\n\tfunction updateArrows( prev, next, prevIndex, nextIndex ) {\n\t\tconst index     = Splide.index;\n\t\tconst prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n\t\tconst nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n\n\t\tsetAttribute( prev, ARIA_LABEL, prevLabel );\n\t\tsetAttribute( next, ARIA_LABEL, nextLabel );\n\t}\n\n\t/**\n\t * Initialize pagination if it's available.\n\t * Append a screen reader element and add aria-controls/label attribute to each item.\n\t *\n\t * @param {Object} data       - Data object containing all items.\n\t * @param {Object} activeItem - An initial active item.\n\t */\n\tfunction initPagination( data, activeItem ) {\n\t\tif ( activeItem ) {\n\t\t\tsetAttribute( activeItem.button, ARIA_CURRENRT, true );\n\t\t}\n\n\t\tdata.items.forEach( item => {\n\t\t\tconst options  = Splide.options;\n\t\t\tconst text     = options.focus === false && options.perPage > 1 ? i18n.pageX : i18n.slideX;\n\t\t\tconst label    = sprintf( text, item.page + 1 );\n\t\t\tconst button   = item.button;\n\t\t\tconst controls = item.Slides.map( Slide => Slide.slide.id );\n\n\t\t\tsetAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\n\t\t\tsetAttribute( button, ARIA_LABEL, label );\n\t\t} );\n\t}\n\n\t/**\n\t * Update pagination attributes.\n\t *\n\t * @param {Object}  data - Data object containing all items.\n\t * @param {Element} prev - A previous active element.\n\t * @param {Element} curr - A current active element.\n\t */\n\tfunction updatePagination( data, prev, curr ) {\n\t\tif ( prev ) {\n\t\t\tremoveAttribute( prev.button, ARIA_CURRENRT );\n\t\t}\n\n\t\tif ( curr ) {\n\t\t\tsetAttribute( curr.button, ARIA_CURRENRT, true );\n\t\t}\n\t}\n\n\t/**\n\t * Initialize autoplay buttons.\n\t */\n\tfunction initAutoplay() {\n\t\t[ 'play', 'pause' ].forEach( name => {\n\t\t\tconst elm = Elements[ name ];\n\n\t\t\tif ( elm ) {\n\t\t\t\tif ( ! isButton( elm ) ) {\n\t\t\t\t\tsetAttribute( elm, 'role', 'button' );\n\t\t\t\t}\n\n\t\t\t\tsetAttribute( elm, ARIA_CONTROLS, Elements.track.id );\n\t\t\t\tsetAttribute( elm, ARIA_LABEL, i18n[ name ] );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Initialize navigation slider.\n\t * Add button role, aria-label, aria-controls to slide elements and append screen reader text to them.\n\t *\n\t * @param {Splide} main - A main Splide instance.\n\t */\n\tfunction initNavigation( main ) {\n\t\tElements.each( Slide => {\n\t\t\tconst slide     = Slide.slide;\n\t\t\tconst realIndex = Slide.realIndex;\n\n\t\t\tif ( ! isButton( slide ) ) {\n\t\t\t\tsetAttribute( slide, 'role', 'button' );\n\t\t\t}\n\n\t\t\tconst slideIndex = realIndex > -1 ? realIndex : Slide.index;\n\t\t\tconst label      = sprintf( i18n.slideX, slideIndex + 1 );\n\t\t\tconst mainSlide  = main.Components.Elements.getSlide( slideIndex );\n\n\t\t\tsetAttribute( slide, ARIA_LABEL, label );\n\n\t\t\tif ( mainSlide ) {\n\t\t\t\tsetAttribute( slide, ARIA_CONTROLS, mainSlide.slide.id );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Update navigation attributes.\n\t *\n\t * @param {Object}  Slide  - A target Slide object.\n\t * @param {boolean} active - True if the slide is active or false if inactive.\n\t */\n\tfunction updateNavigation( { slide }, active ) {\n\t\tif ( active ) {\n\t\t\tsetAttribute( slide, ARIA_CURRENRT, true );\n\t\t} else {\n\t\t\tremoveAttribute( slide, ARIA_CURRENRT );\n\t\t}\n\t}\n\n\t/**\n\t * Check if the given element is button or not.\n\t *\n\t * @param {Element} elm - An element to be checked.\n\t *\n\t * @return {boolean} - True if the given element is button.\n\t */\n\tfunction isButton( elm ) {\n\t\treturn elm.tagName === 'BUTTON';\n\t}\n\n\treturn A11y;\n}","/**\n * The component for synchronizing a slider with another.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { LOOP } from '../../constants/types';\nimport { IDLE } from \"../../constants/states\";\n\n/**\n * The event name for sync.\n *\n * @type {string}\n */\nconst SYNC_EVENT = 'move.sync';\n\n/**\n * The event names for click navigation.\n * @type {string}\n */\nconst CLICK_EVENTS = 'mouseup touchend';\n\n/**\n * The keys for triggering the navigation button.\n *\n * @type {String[]}\n */\nconst TRIGGER_KEYS = [ ' ', 'Enter', 'Spacebar' ];\n\n\n/**\n * The component for synchronizing a slider with another.\n *\n * @param {Splide} Splide - A Splide instance.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide ) => {\n\t/**\n\t * Keep the sibling Splide instance.\n\t *\n\t * @type {Splide}\n\t */\n\tlet sibling = Splide.sibling;\n\n\t/**\n\t * Whether the sibling slider is navigation or not.\n\t *\n\t * @type {Splide|boolean}\n\t */\n\tconst isNavigation = sibling && sibling.options.isNavigation;\n\n\t/**\n\t * Layout component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Sync = {\n\t\t/**\n\t\t * Required only when the sub slider is available.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: !! sibling,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tsyncMain();\n\t\t\tsyncSibling();\n\n\t\t\tif ( isNavigation ) {\n\t\t\t\tbind();\n\n\t\t\t\tSplide.on( 'refresh', () => {\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tbind();\n\t\t\t\t\t\tsibling.emit( 'navigation:updated', Splide );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Called after all components are mounted.\n\t\t */\n\t\tmounted() {\n\t\t\tif ( isNavigation ) {\n\t\t\t\tsibling.emit( 'navigation:mounted', Splide );\n\t\t\t}\n\t\t},\n\t};\n\n\t/**\n\t * Listen the primary slider event to move secondary one.\n\t * Must unbind a handler at first to avoid infinite loop.\n\t */\n\tfunction syncMain() {\n\t\tSplide.on( SYNC_EVENT, ( newIndex, prevIndex, destIndex ) => {\n\t\t\tsibling\n\t\t\t\t.off( SYNC_EVENT )\n\t\t\t\t.go( sibling.is( LOOP ) ? destIndex : newIndex, false );\n\n\t\t\tsyncSibling();\n\t\t} );\n\t}\n\n\t/**\n\t * Listen the secondary slider event to move primary one.\n\t * Must unbind a handler at first to avoid infinite loop.\n\t */\n\tfunction syncSibling() {\n\t\tsibling.on( SYNC_EVENT, ( newIndex, prevIndex, destIndex ) => {\n\t\t\tSplide\n\t\t\t\t.off( SYNC_EVENT )\n\t\t\t\t.go( Splide.is( LOOP ) ? destIndex : newIndex, false );\n\n\t\t\tsyncMain();\n\t\t} );\n\t}\n\n\t/**\n\t * Listen some events on each slide.\n\t */\n\tfunction bind() {\n\t\tsibling.Components.Elements.each( ( { slide, index } ) => {\n\t\t\t/*\n\t\t\t * Listen mouseup and touchend events to handle click.\n\t\t\t */\n\t\t\tSplide\n\t\t\t\t.off( CLICK_EVENTS, slide )\n\t\t\t\t.on( CLICK_EVENTS, e => {\n\t\t\t\t\t// Ignore a middle or right click.\n\t\t\t\t\tif ( ! e.button || e.button === 0 ) {\n\t\t\t\t\t\tmoveSibling( index );\n\t\t\t\t\t}\n\t\t\t\t}, slide );\n\n\t\t\t/*\n\t\t\t * Subscribe keyup to handle Enter and Space key.\n\t\t\t * Note that Array.includes is not supported by IE.\n\t\t\t */\n\t\t\tSplide\n\t\t\t\t.off( 'keyup', slide )\n\t\t\t\t.on( 'keyup', e => {\n\t\t\t\t\tif ( TRIGGER_KEYS.indexOf( e.key ) > -1 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tmoveSibling( index );\n\t\t\t\t\t}\n\t\t\t\t}, slide, { passive: false } );\n\t\t} );\n\t}\n\n\t/**\n\t * Move the sibling to the given index.\n\t * Need to check \"IDLE\" status because slides can be moving by Drag component.\n\t *\n\t * @param {number} index - Target index.\n\t */\n\tfunction moveSibling( index ) {\n\t\tif ( Splide.State.is( IDLE ) ) {\n\t\t\tsibling.go( index );\n\t\t}\n\t}\n\n\treturn Sync;\n}","/**\n * The component for updating options according to a current window width.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport { throttle } from \"../../utils/time\";\nimport { DESTROYED } from \"../../constants/states\";\n\n/**\n * Interval time for throttle.\n *\n * @type {number}\n */\nconst THROTTLE = 50;\n\n/**\n * The component for updating options according to a current window width.\n *\n * @param {Splide} Splide - A Splide instance.\n *\n * @return {Object} - The component object.\n */\nexport default ( Splide ) => {\n\t/**\n\t * Store breakpoints.\n\t *\n\t * @type {Object|boolean}\n\t */\n\tconst breakpoints = Splide.options.breakpoints;\n\n\t/**\n\t * The check function whose frequency of call is reduced.\n\t *\n\t * @type {Function}\n\t */\n\tconst throttledCheck = throttle( check, THROTTLE );\n\n\t/**\n\t * Keep initial options.\n\t *\n\t * @type {Object}\n\t */\n\tlet initialOptions;\n\n\t/**\n\t * An array containing objects of point and MediaQueryList.\n\t *\n\t * @type {Object[]}\n\t */\n\tlet map = [];\n\n\t/**\n\t * Hold the previous breakpoint.\n\t *\n\t * @type {number|undefined}\n\t */\n\tlet prevPoint;\n\n\t/**\n\t * Breakpoints component object.\n\t *\n\t * @type {Object}\n\t */\n\tconst Breakpoints = {\n\t\t/**\n\t\t * Required only when the breakpoints definition is provided and browser supports matchMedia.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\trequired: breakpoints && matchMedia,\n\n\t\t/**\n\t\t * Called when the component is mounted.\n\t\t */\n\t\tmount() {\n\t\t\tmap = Object.keys( breakpoints )\n\t\t\t\t.sort( ( n, m ) => +n - +m )\n\t\t\t\t.map( point => ( { point, mql: matchMedia( `(max-width:${ point }px)` ) } ) );\n\n\t\t\t/*\n\t\t\t * To keep monitoring resize event after destruction without \"completely\",\n\t\t\t * use native addEventListener instead of Splide.on.\n\t\t\t */\n\t\t\tthis.destroy( true );\n\t\t\taddEventListener( 'resize', throttledCheck );\n\n\t\t\t// Keep initial options to apply them when no breakpoint matches.\n\t\t\tinitialOptions = Splide.options;\n\n\t\t\tcheck();\n\t\t},\n\n\t\t/**\n\t\t * Destroy.\n\t\t *\n\t\t * @param {boolean} completely - Whether to destroy Splide completely.\n\t\t */\n\t\tdestroy( completely ) {\n\t\t\tif ( completely ) {\n\t\t\t\tremoveEventListener( 'resize', throttledCheck );\n\t\t\t}\n\t\t},\n\t};\n\n\t/**\n\t * Check the breakpoint.\n\t */\n\tfunction check() {\n\t\tconst point = getPoint();\n\n\t\tif ( point !== prevPoint ) {\n\t\t\tprevPoint = point;\n\n\t\t\tconst State   = Splide.State;\n\t\t\tconst options = breakpoints[ point ] || initialOptions;\n\t\t\tconst destroy = options.destroy;\n\n\t\t\tif ( destroy ) {\n\t\t\t\tSplide.options = initialOptions;\n\t\t\t\tSplide.destroy( destroy === 'completely' );\n\t\t\t} else {\n\t\t\t\tif ( State.is( DESTROYED ) ) {\n\t\t\t\t\tSplide.mount();\n\t\t\t\t}\n\n\t\t\t\tSplide.options = options;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return the breakpoint matching current window width.\n\t * Note that Array.prototype.find is not supported by IE.\n\t *\n\t * @return {number|string} - A breakpoint as number or string. -1 if no point matches.\n\t */\n\tfunction getPoint() {\n\t\tconst item = map.filter( item => item.mql.matches )[0];\n\t\treturn item ? item.point : -1;\n\t}\n\n\treturn Breakpoints;\n}","/**\n * Export components.\n *\n * @author    Naotoshi Fujita\n * @copyright Naotoshi Fujita. All rights reserved.\n */\n\nimport Options from \"./options\";\nimport Elements from \"./elements\";\nimport Controller from \"./controller\";\nimport Track from \"./track\";\nimport Clones from \"./clones\";\nimport Layout from \"./layout\";\nimport Drag from \"./drag\";\nimport Click from \"./click\";\nimport Autoplay from \"./autoplay\";\nimport Cover from \"./cover\";\nimport Arrows from \"./arrows\";\nimport Pagination from \"./pagination\";\nimport LazyLoad from \"./lazyload\";\nimport Keyboard from \"./keyboard\";\nimport A11y from \"./a11y\";\nimport Sync from \"./sync\";\nimport Breakpoints from \"./breakpoints\";\n\nexport const COMPLETE = {\n\tOptions,\n\tBreakpoints,\n\tController,\n\tElements,\n\tTrack,\n\tClones,\n\tLayout,\n\tDrag,\n\tClick,\n\tAutoplay,\n\tCover,\n\tArrows,\n\tPagination,\n\tLazyLoad,\n\tKeyboard,\n\tSync,\n\tA11y,\n};\n\nexport const LIGHT = {\n\tOptions,\n\tController,\n\tElements,\n\tTrack,\n\tClones,\n\tLayout,\n\tDrag,\n\tClick,\n\tArrows,\n\tPagination,\n\tA11y,\n};\n","import { default as Core } from '../../splide';\nimport { COMPLETE } from '../../components';\n\n\n/**\n * Exports the Splide class with all components.\n *\n * @since 1.0.0\n */\nexport default class Splide extends Core {\n\tconstructor( root, options ) {\n\t\tsuper( root, options, COMPLETE );\n\t}\n}\n"],"names":["data","Event","on","events","handler","elm","options","split","forEach","event","addEventListener","push","off","filter","item","unsubscribe","emit","args","destroy","removeEventListener","initialState","curr","set","state","is","keys","Object","each","obj","callback","some","key","index","values","map","isObject","subject","merge","from","to","value","assign","defineProperty","getOwnPropertyDescriptor","toArray","Array","isArray","between","m1","m2","Math","min","max","sprintf","format","replacements","i","replace","unit","type","parseFloat","pad","number","toPixel","root","div","create","applyStyle","position","width","append","clientWidth","remove","find","selector","querySelector","child","parent","tagOrClassName","children","hasClass","tagName","tag","attrs","document","createElement","setAttribute","domify","html","innerHTML","firstChild","elms","parentElement","removeChild","appendChild","before","ref","insertBefore","styles","prop","style","addOrRemoveClasses","classes","name","classList","addClass","removeClass","className","contains","getAttribute","removeAttribute","names","getRect","getBoundingClientRect","loaded","images","querySelectorAll","length","count","img","onload","onerror","SLIDE","LOOP","FADE","Splide","Components","list","endCallback","mount","Elements","e","target","start","destIndex","newIndex","prevIndex","coord","done","edgeIndex","Controller","speed","rewindSpeed","transition","easing","transform","x","y","Fade","apply","track","height","clientHeight","setTimeout","slides","compose","Transition","components","Component","toLowerCase","Slide","MESSAGE_PREFIX","error","message","console","exist","Error","ROOT","ELEMENT_CLASSES","slider","slide","container","arrows","arrow","prev","next","pagination","page","clone","progress","bar","autoplay","play","pause","spinner","sr","STATUS_CLASSES","active","visible","loading","I18N","first","last","slideX","pageX","DEFAULTS","rewind","waitForTransition","fixedWidth","fixedHeight","heightRatio","autoWidth","autoHeight","perPage","perMove","clones","focus","gap","padding","arrowPath","interval","pauseOnHover","pauseOnFocus","resetProgress","lazyLoad","preloadPages","keyboard","drag","dragAngleThreshold","swipeDistanceThreshold","flickVelocityThreshold","flickPower","flickMaxPages","direction","cover","accessibility","slideFocus","isNavigation","trimSpace","updateOnMove","throttle","breakpoints","i18n","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","Element","State","STATES.CREATED","STATES","_o","_i","_c","_e","_t","Extensions","component","required","undefined","STATES.MOUNTED","mounted","STATES.IDLE","visibility","STATES.MOVING","sync","splide","sibling","go","control","wait","add","refresh","bind","completely","reverse","STATES.DESTROYED","parseInt","created","JSON","parse","RTL","TTB","STYLE_RESTORE_EVENTS","realIndex","STATUS_UPDATE_EVENTS","isClone","id","update","restoreStyles","display","isActive","isVisible","ceil","trackRect","slideRect","top","bottom","left","right","isWithin","within","diff","abs","forVisibility","UID_NAME","Slides","_window","window","global","uid","init","getClasses","collect","register","SlideObject","getSlide","getSlides","includeClones","getSlidesByPage","idx","toIndex","splice","total","findParts","rootClass","floor","isLoop","silently","trim","Track","matches","String","match","indicator","parsePage","hasFocus","pageLength","toPage","edge","isRtl","nextIndex","newOptions","sign","Layout","isVertical","isFade","isRTL","isLoopPending","jump","newPosition","getTrimmedPosition","toCoord","onTransitionEnd","translate","cancel","shift","toPosition","innerSize","totalSize","size","minDistance","Infinity","slideIndex","distance","slideSize","offset","cloneCount","Clones","getCloneCount","generateClones","concat","slice","cloneDeeply","baseCount","dimension","fixedSize","cloneNode","margin","resize","paddingLeft","paddingRight","totalWidth","listRect","slideWidth","offsetWidth","slideHeight","paddingTop","paddingBottom","totalHeight","offsetHeight","func","timeout","createInterval","requestAnimationFrame","elapse","rate","step","timestamp","reset","Vertical","Horizontal","maxWidth","MIN_VELOCITY","FRICTION_REDUCER","startCoord","startInfo","currentInfo","isDragging","axis","Drag","disabled","move","passive","end","preventDefault","analyze","cancelable","resist","shouldMove","angle","atan","PI","log","info","velocity","absV","destination","timeStamp","touches","clientX","clientY","fromX","fromY","startTime","time","duration","Click","onClick","capture","stopPropagation","stopImmediatePropagation","PAUSE_FLAGS","HOVER","FOCUS","MANUAL","flags","Autoplay","flag","f","indexOf","switchOn","Cover","uncover","src","background","XML_NAME_SPACE","PATH","SIZE","Arrows","createArrow","appendArrows","updateDisabled","isEnough","wrapper","class","firstElementChild","ATTRIBUTES_UPDATE_EVENT","UPDATE_EVENT","Pagination","createPagination","updateAttributes","getItem","items","button","li","SRC_DATA_NAME","SRCSET_DATA_NAME","isSequential","Lazyload","srcset","loadNext","check","isNaN","image","load","ARIA_CURRENRT","ARIA_CONTROLS","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","KEY_MAP","ltr","ArrowLeft","ArrowRight","Left","Right","rtl","ttb","ArrowUp","ArrowDown","Up","Down","allAttributes","A11y","updateSlide","initArrows","updateArrows","initPagination","updatePagination","initNavigation","updateNavigation","initAutoplay","controls","prevLabel","nextLabel","activeItem","text","label","join","isButton","main","mainSlide","SYNC_EVENT","CLICK_EVENTS","TRIGGER_KEYS","Sync","syncMain","syncSibling","moveSibling","THROTTLE","throttledCheck","initialOptions","prevPoint","Breakpoints","matchMedia","sort","n","m","point","mql","getPoint","COMPLETE","Options","LazyLoad","Keyboard","Core"],"mappings":"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"}